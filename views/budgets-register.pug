extends layout

block content
  div(class="row" style="margin-top: -100vh;")
    nav(class="col-12 mt-2")
      div(class="nav nav-tabs" id="nav-tab" role="tablist")
        a(class="menu-storage col-sm-12 col-md-12 col-lg-6 col-xl-6 nav-link active" id="nav-home-tab" data-bs-toggle="tab" href="#nav-home" role="tab" aria-controls="nav-home" aria-selected="true") Salários e Encargos
        a(class="menu-storage col-sm-12 col-md-12 col-lg-6 col-xl-6 nav-link" id="nav-benefits-others-tab" data-bs-toggle="tab" href="#nav-benefits-others" role="tab" aria-controls="nav-benefits-others" aria-selected="false") Benefícios e Outros
        a(class="menu-storage col-sm-12 col-md-12 col-lg-6 col-xl-6 nav-link" id="nav-investment-equipment-tab" data-bs-toggle="tab" href="#nav-investment-equipment" role="tab" aria-controls="nav-investment-equipment" aria-selected="false") Investimento #{"&"} Equipamentos
        a(class="menu-storage col-sm-12 col-md-12 col-lg-6 col-xl-6 nav-link" id="nav-investment-rental-equipment-tab" data-bs-toggle="tab" href="#nav-investment-rental-equipment" role="tab" aria-controls="nav-investment-rental-equipment" aria-selected="false") Locações #{"&"} Equipamentos
        a(class="menu-storage col-sm-12 col-md-12 col-lg-6 col-xl-6 nav-link" id="nav-fuel-vehicles-tab" data-bs-toggle="tab" href="#nav-fuel-vehicles" role="tab" aria-controls="nav-fuel-vehicles" aria-selected="false") Combustível de Veículos
        a(class="menu-storage col-sm-12 col-md-12 col-lg-6 col-xl-6 nav-link" id="nav-charges-aliquots-tab" data-bs-toggle="tab" href="#nav-charges-aliquots" role="tab" aria-controls="nav-charges-aliquots" aria-selected="false") Taxas #{"&"} Aliquotas
    div(class="tab-content col-12" id="nav-tabContent")
      //- Salários e Encargos
      div(class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab")
        div(class="row border-bottom mt-3")
          div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
            label(for="budgets-ID") Código
            input(type="text" class="form-control" id="budgets-ID" value="???" disabled)
          div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
            label(for="budgets-costcenter-selected") Centro de Custo
            select(class="form-select" id="budgets-costcenter-selected")
              option(selected value="null") Selecione a opção
              option S. MAVE
              option V. MAVE
              option MAVE SYSTEMS
              option QUALITY
          div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
            label(for="budgets-client-selected") Cliente
            select(class="form-select" id="budgets-client-selected")
              option(selected value="null") Selecione um cliente
          div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
            label(for="budgets-version") Versão
            input(type="text" class="form-control" id="budgets-version" value="1" disabled)
          div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
            label(for="budgets-description") Descrição
            input(type="text" class="form-control" id="budgets-description")
          div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
            label(for="budgets-iss-selected") Código de Serviço
            select(class="form-select" id="budgets-iss-selected")
              option(selected value="null") Selecione uma cidade
          div(class="col-12 mb-5")
            label(for="budgets-percentage-accumulation") Percentual de Acumulo
            input(type="text" class="form-control" id="budgets-percentage-accumulation" value="2000")
          div(class="col-12 mb-5")
            label(for="budgets-percentage-dangerousness") Percentual de Periculosidade
            input(type="text" class="form-control" id="budgets-percentage-dangerousness" value="3000")
          div(class="col-12 mb-5")
            label(for="budgets-percentage-insalubrity") Percentual de Insalubridade
            input(type="text" class="form-control" id="budgets-percentage-insalubrity" value="4000")
          div(class="col-12 mb-5")
            label(for="budgets-workinghours") Quantidade das horas de trabalho
            input(type="text" class="form-control" id="budgets-workinghours" value="192")
          div(class="col-12 mb-5")
            label(for="budgets-workingdays") Quantidade dos dias de trabalho
            input(type="text" class="form-control" id="budgets-workingdays" value="16")
          div(class="col-12 mb-5")
            h4(class="fw-bold text-center text-muted border-bottom p-2") Dados Trabalhistas
            div(class="row border-bottom mt-3")
              div(class="col-12 mb-2 fw-bold text-muted text-center") Total do Efetivo
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
                input(type="text" class="form-control" id="workdata-text-1" value="0" disabled)
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
                input(type="text" class="form-control" id="workdata-text-2" value="0" disabled)
              div(class="col-12 mb-2 fw-bold text-muted text-center") Reserva Técnica
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
                input(type="text" class="form-control" id="workdata-technicalreserve-1" value="100" disabled)
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
                input(type="text" class="form-control" id="workdata-technicalreserve-2" value="0" disabled)
              div(class="col-12 mb-2 fw-bold text-muted text-center") Encargos Sociais
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
                input(type="text" class="form-control" id="workdata-text-3" value="0" disabled)
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
                input(type="text" class="form-control" id="workdata-text-4" value="0" disabled)
              div(class="col-12 mb-2 fw-bold text-muted text-center") Total do Efetivo (Salários + Encargos)
              div(class="col-12 mb-5")
                input(type="text" class="form-control" id="workdata-text-5" value="0" disabled)
              div(class="col-12 mb-2 fw-bold text-muted text-center")
                h4(class="fw-bold text-center text-muted border-bottom p-2") Lista de Efetivo
            ul(class="list-group mb-5" id="ul-workdata")
      //- Benefícios e Outros
      div(class="tab-pane fade show" id="nav-benefits-others" role="tabpanel" aria-labelledby="nav-benefits-others-tab")
        div(class="row border-bottom mt-3")
          div(class="col-12 mb-2 fw-bold text-muted text-center") Total Benefícios e Outros
          div(class="col-12 mb-5")
            input(type="text" class="form-control" id="benefits-others-total" value="0" disabled)
          div(class="col-12 mb-2 fw-bold text-muted text-center")
            h4(class="fw-bold text-center text-muted border-bottom p-2") Lista de Benefícios
        ul(class="list-group mb-5" id="ul-benefits")
      //- Investimento & Equipamentos
      div(class="tab-pane fade show" id="nav-investment-equipment" role="tabpanel" aria-labelledby="nav-investment-equipment-tab")
        div(class="row border-bottom mt-3")
          div(class="col-12 mb-2 fw-bold text-muted text-center") Total Investimento #{"&"} Equipamentos
          div(class="col-12 mb-5")
            input(type="text" class="form-control" id="investment-equipment-total" value="0" disabled)
          div(class="col-12 mb-2 fw-bold text-muted text-center")
            h4(class="fw-bold text-center text-muted border-bottom p-2") Lista de Equipamentos
        ul(class="list-group mb-5" id="ul-investment-equipment")
      //- Locações & Equipamentos
      div(class="tab-pane fade show" id="nav-investment-rental-equipment" role="tabpanel" aria-labelledby="nav-investment-rental-equipment-tab")
        div(class="row border-bottom mt-3")
          div(class="col-12 mb-2 fw-bold text-muted text-center") Total Locações #{"&"} Equipamentos
          div(class="col-12 mb-5")
            input(type="text" class="form-control" id="investment-rental-equipment-total" value="0" disabled)
          div(class="col-12 mb-2 fw-bold text-muted text-center")
            h4(class="fw-bold text-center text-muted border-bottom p-2") Lista de locações
        ul(class="list-group mb-5" id="ul-investment-rental-equipment")
      //- Combustível de Veículos
      div(class="tab-pane fade show" id="nav-fuel-vehicles" role="tabpanel" aria-labelledby="nav-fuel-vehicles-tab")
        div(class="row border-bottom mt-3")
          div(class="col-12 mb-2 fw-bold text-muted text-center") Total Combustível de Veículos
          div(class="col-12 mb-5")
            input(type="text" class="form-control" id="fuel-vehicles-total" value="0" disabled)
          div(class="col-12 mb-2 fw-bold text-muted text-center") Total (SALÁRIOS e ENCARGOS, BENEFÍCIOS e OUTROS, VEÍCULOS, MATERIAIS, PRODUTOS, EQUIPAMENTOS, INSUMOS e OUTROS)
          div(class="col-12 mb-5")
            input(type="text" class="form-control" id="fuel-vehicles-total-all" value="0" disabled)
          div(class="col-12 mb-2 fw-bold text-muted text-center")
            h4(class="fw-bold text-center text-muted border-bottom p-2") Lista de combustível
        ul(class="list-group mb-5" id="ul-fuel-vehicles")
      //- Taxas & Aliquotas
      div(class="tab-pane fade show" id="nav-charges-aliquots" role="tabpanel" aria-labelledby="nav-charges-aliquots-tab")
        div(class="row border-bottom mt-3")
          div(class="col-12 mb-2 fw-bold text-muted text-center") Total de Taxas
          div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
            input(type="text" class="form-control" id="charges-aliquots-total-1" value="0" disabled)
          div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
            input(type="text" class="form-control" id="charges-aliquots-total-2" value="0" disabled)
          div(class="col-12 mb-2 fw-bold text-muted text-center") Total após Taxas
          div(class="col-12 mb-5")
            input(type="text" class="form-control" id="charges-aliquots-total-3" value="0" disabled)
          div(class="col-12 mb-2 fw-bold text-muted text-center") Total de Aliquotas
          div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
            input(type="text" class="form-control" id="charges-aliquots-total-4" value="0" disabled)
          div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5")
            input(type="text" class="form-control" id="charges-aliquots-total-5" value="0" disabled)
          div(class="col-12 mb-2 fw-bold text-muted text-center") Total Geral
          div(class="col-12 mb-5")
            input(type="text" class="form-control" id="charges-aliquots-total-6" value="0" disabled)
          div(class="col-12 mb-2 fw-bold text-muted text-center") Reajuste
          div(class="col-12 mb-5")
            input(type="text" class="form-control" id="charges-aliquots-total-7" value="300")
          div(class="col-12 mb-2 fw-bold text-muted text-center") Total Geral (Reajuste)
          div(class="col-12 mb-5")
            input(type="text" class="form-control" id="charges-aliquots-total-8" value="0" disabled)
          div(class="col-12 mb-2 fw-bold text-muted text-center")
            h4(class="fw-bold text-center text-muted p-2") Lista de Taxas
        ul(class="list-group" id="ul-charges-aliquots-1")
          li(class="list-group-item border-0 mb-2")
            div(class="row")
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-3")
                label(class="text-muted") Administração #{"(%)"}
                input(type="text" class="form-control text-muted" id="charges-percentage-1" value=`1000` disabled)
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-3")
                label(class="text-muted") Administração #{"($)"}
                input(type="text" class="form-control text-muted" id="charges-value-1" value=`-` disabled)
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-3")
                label(class="text-muted") Lucro #{"(%)"}
                input(type="text" class="form-control text-muted" id="charges-percentage-2" value=`800` disabled)
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-3")
                label(class="text-muted") Lucro #{"($)"}
                input(type="text" class="form-control text-muted" id="charges-value-2" value=`-` disabled)
              div(class="col-sm-12 col-md-12 col-lg-3 col-xl-3 mb-3")
                label(class="text-muted") Taxa Condição de Pagamento (Condição)
                select(class="form-select" id="charges-aliquots-condition-payment-selected")
                  option 30
                  option 60
                  option 90
                  option(selected) 120
              div(class="col-sm-12 col-md-12 col-lg-3 col-xl-3 mb-3")
                label(class="text-muted") Taxa Condição de Pagamento (Taxa)
                input(type="text" class="form-control text-muted" id="charges-aliquots-condition-payment-percentage" value='-' disabled)
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-3")
                label(class="text-muted") Taxa Condição de Pagamento (Valor)
                input(type="text" class="form-control text-muted" id="charges-aliquots-condition-payment-value" value='-' disabled)
          div(class="col-12 mb-2 fw-bold text-muted text-center")
            h4(class="fw-bold text-center text-muted border-bottom p-2") Lista de Aliquotas
        ul(class="list-group list-group-flush" id="ul-charges-aliquots-2")
          li(class="list-group-item mb-3 p-2")
            div(class="row")
              div(class="form-check col-sm-12 col-md-12 col-lg-3 col-xl-3 mb-3")
                label(class="text-muted") ISS
                select(class="form-select" id="charges-aliquots-iss-selected")
                  option(selected) Habilitado
                  option Desabilitado
              div(class="col-sm-12 col-md-12 col-lg-3 col-xl-3 mb-3")
                label(class="text-muted") ISS #{"(%)"}
                input(type="text" class="form-control text-muted" id="charges-aliquots-iss-percentage" value=`500` disabled)
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-3")
                label(class="text-muted") ISS #{"($)"}
                input(type="text" class="form-control text-muted" id="charges-aliquots-iss-value" value=`-` disabled)
          li(class="list-group-item mb-3 p-2")
            div(class="row")
              div(class="form-check col-sm-12 col-md-12 col-lg-3 col-xl-3 mb-3")
                label(class="text-muted") PIS
                select(class="form-select" id="charges-aliquots-pis-selected")
                  option(selected) Habilitado
                  option Desabilitado
              div(class="col-sm-12 col-md-12 col-lg-3 col-xl-3 mb-3")
                label(class="text-muted") PIS #{"(%)"}
                input(type="text" class="form-control text-muted" id="charges-aliquots-pis-percentage" value=`165` disabled)
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-3")
                label(class="text-muted") PIS #{"($)"}
                input(type="text" class="form-control text-muted" id="charges-aliquots-pis-value" value=`-` disabled)
          li(class="list-group-item mb-3 p-2")
            div(class="row")
              div(class="form-check col-sm-12 col-md-12 col-lg-3 col-xl-3 mb-3")
                label(class="text-muted") COFINS
                select(class="form-select" id="charges-aliquots-cofins-selected")
                  option(selected) Habilitado
                  option Desabilitado
              div(class="col-sm-12 col-md-12 col-lg-3 col-xl-3 mb-3")
                label(class="text-muted") COFINS #{"(%)"}
                input(type="text" class="form-control text-muted" id="charges-aliquots-cofins-percentage" value=`760` disabled)
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-3")
                label(class="text-muted") COFINS #{"($)"}
                input(type="text" class="form-control text-muted" id="charges-aliquots-cofins-value" value=`-` disabled)
          li(class="list-group-item mb-3 p-2")
            div(class="row")
              div(class="form-check col-sm-12 col-md-12 col-lg-3 col-xl-3 mb-3")
                label(class="text-muted") IR
                select(class="form-select" id="charges-aliquots-ir-selected")
                  option(selected) Habilitado
                  option Desabilitado
              div(class="col-sm-12 col-md-12 col-lg-3 col-xl-3 mb-3")
                label(class="text-muted") IR #{"(%)"}
                input(type="text" class="form-control text-muted" id="charges-aliquots-ir-percentage" value=`100` disabled)
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-3")
                label(class="text-muted") IR #{"($)"}
                input(type="text" class="form-control text-muted" id="charges-aliquots-ir-value" value=`-` disabled)
          li(class="list-group-item mb-3 p-2")
            div(class="row")
              div(class="form-check col-sm-12 col-md-12 col-lg-3 col-xl-3 mb-3")
                label(class="text-muted") CSLL
                select(class="form-select" id="charges-aliquots-csll-selected")
                  option(selected) Habilitado
                  option Desabilitado
              div(class="col-sm-12 col-md-12 col-lg-3 col-xl-3 mb-3")
                label(class="text-muted") CSLL #{"(%)"}
                input(type="text" class="form-control text-muted" id="charges-aliquots-csll-percentage" value=`096` disabled)
              div(class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-3")
                label(class="text-muted") CSLL #{"($)"}
                input(type="text" class="form-control text-muted" id="charges-aliquots-csll-value" value=`-` disabled)
    //- MODALS
    //- ADICIONAR DADO TRABALHISTA
    div(id="modal-add-workdata" class="modal fade mt-5" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true")
      div(class="modal-dialog modal-xl modal-dialog-scrollable")
        div(class="modal-content")
          div(class="modal-header")
            h5(class="modal-title") ADICIONAR DADO TRABALHISTA
          div(id="modal-1-scrollable" class="modal-body")
            div(class="col mt-2 mb-4")
              select(class="form-select" id="select-add-workdata" onchange="$('#select-add-workdata').val() !== 'null' ? $('#button-add-workdata').attr('disabled', false) : $('#button-add-workdata').attr('disabled', true)")
                option(selected value="null") Selecione um dado trabalhista
            button(type="button" class="btn btn-mave1 col-12 mt-2 mb-2" data-bs-dismiss="modal" id="button-add-workdata" disabled onclick="add_workdata_push()") adicionar
            button(type="button" class="btn btn-mave1 col-12" data-bs-dismiss="modal" id="button-add-workdata") Voltar
    //- ADICIONAR BENEFICIO
    div(id="modal-add-benefits" class="modal fade mt-5" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true")
      div(class="modal-dialog modal-xl modal-dialog-scrollable")
        div(class="modal-content")
          div(class="modal-header")
            h5(class="modal-title") ADICIONAR BENEFÍCIO
          div(id="modal-1-scrollable" class="modal-body")
            div(class="col mt-2 mb-4")
              select(class="form-select" id="select-add-benefits" onchange="$('#select-add-benefits').val() !== 'null' ? $('#button-add-benefits').attr('disabled', false) : $('#button-add-benefits').attr('disabled', true)")
                option(selected value="null") Selecione um benefício
            button(type="button" class="btn btn-mave1 col-12 mt-2 mb-2" data-bs-dismiss="modal" id="button-add-benefits" disabled onclick="add_benefits_push()") adicionar
            button(type="button" class="btn btn-mave1 col-12" data-bs-dismiss="modal" id="button-add-benefits") Voltar
    //- ADICIONAR EQUIPAMENTO
    div(id="modal-add-equipment" class="modal fade mt-5" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true")
      div(class="modal-dialog modal-xl modal-dialog-scrollable")
        div(class="modal-content")
          div(class="modal-header")
            h5(class="modal-title") ADICIONAR EQUIPAMENTO
          div(id="modal-1-scrollable" class="modal-body")
            div(class="col mt-2 mb-4")
              select(class="form-select" id="select-add-equipment" onchange="$('#select-add-equipment').val() !== 'null' ? $('#button-add-equipment').attr('disabled', false) : $('#button-add-equipment').attr('disabled', true)")
                option(selected value="null") Selecione um equipamento
            button(type="button" class="btn btn-mave1 col-12 mt-2 mb-2" data-bs-dismiss="modal" id="button-add-equipment" disabled onclick="add_equipment_push()") adicionar
            button(type="button" class="btn btn-mave1 col-12" data-bs-dismiss="modal" id="button-add-equipment") Voltar
    //- ADICIONAR ALOCAÇÃO
    div(id="modal-add-rental" class="modal fade mt-5" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true")
      div(class="modal-dialog modal-xl modal-dialog-scrollable")
        div(class="modal-content")
          div(class="modal-header")
            h5(class="modal-title") ADICIONAR ALOCAÇÃO
          div(id="modal-1-scrollable" class="modal-body")
            div(class="col mt-2 mb-4")
              select(class="form-select" id="select-add-rental" onchange="$('#select-add-rental').val() !== 'null' ? $('#button-add-rental').attr('disabled', false) : $('#button-add-rental').attr('disabled', true)")
                option(selected value="null") Selecione um equipamento
            button(type="button" class="btn btn-mave1 col-12 mt-2 mb-2" data-bs-dismiss="modal" id="button-add-rental" disabled onclick="add_rental_push()") adicionar
            button(type="button" class="btn btn-mave1 col-12" data-bs-dismiss="modal" id="button-add-rental") Voltar
    //- ADICIONAR COMBUSTÍVEL
    div(id="modal-add-fuel" class="modal fade mt-5" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true")
      div(class="modal-dialog modal-xl modal-dialog-scrollable")
        div(class="modal-content")
          div(class="modal-header")
            h5(class="modal-title") ADICIONAR COMBUSTÍVEL
          div(id="modal-1-scrollable" class="modal-body")
            div(class="col mt-2 mb-4")
              select(class="form-select" id="select-add-fuel" onchange="$('#select-add-fuel').val() !== 'null' ? $('#button-add-fuel').attr('disabled', false) : $('#button-add-fuel').attr('disabled', true)")
                option(selected value="null") Selecione um combustível
            button(type="button" class="btn btn-mave1 col-12 mt-2 mb-2" data-bs-dismiss="modal" id="button-add-fuel" disabled onclick="add_fuel_push()") adicionar
            button(type="button" class="btn btn-mave1 col-12" data-bs-dismiss="modal" id="button-add-fuel") Voltar
  script(src="/javascripts/lz-string.min.js")
  script.
    let workdata = JSON.parse(LZString.decompressFromBase64(`#{workdata}`)),
      uniforms = JSON.parse(LZString.decompressFromBase64(`#{uniforms}`)),
      aliquots = JSON.parse(LZString.decompressFromBase64(`#{aliquots}`)),
      esocial = JSON.parse(LZString.decompressFromBase64(`#{esocial}`)),
      benefits = JSON.parse(LZString.decompressFromBase64(`#{benefits}`)),
      equipments = JSON.parse(LZString.decompressFromBase64(`#{equipments}`)),
      rents = JSON.parse(LZString.decompressFromBase64(`#{rents}`)),
      fuel = JSON.parse(LZString.decompressFromBase64(`#{fuel}`)),
      monthlycost_total = JSON.parse(LZString.decompressFromBase64(`#{monthlycost_total}`)),
      clients = JSON.parse(LZString.decompressFromBase64(`#{clients}`)),
      workdata_selected = [],
      benefits_selected = [],
      equipments_selected = [],
      rents_selected = [],
      fuel_selected = [],
      total_effective = {
        quantity: 0,
        price: 0
      },
      technicalreserve_total = 0,
      esocial_total = 0,
      equipments_total = 0,
      rents_total = 0,
      fuel_total = [0, 0];

    $(document).ready(() => {
      // - Configura a lista de dados trabalhistas
      if (workdata.length > 0) {
        workdata.map(data => {
          $('#select-add-workdata').append(`\
            <option value="${data['id']}">${data['jobtitle']}</option> \
          `);
        })
      }

      // - Configura a lista de clientes
      if (clients.length > 0) {
        clients.map(data => {
          $('#budgets-client-selected').append(`\
            <option value="${data['id']}">${data['name']} (CPF/CNPJ - ${data['cpfcnpj']})</option> \
          `);
        })
      }

      // - Configura a lista de benefícios
      if (benefits.length > 0) {
        benefits.map(data => {
          $('#select-add-benefits').append(`\
            <option value="${data['id']}">${data['description']}</option> \
          `);
        })
      }

      // - Configura a lista de equipamentos
      if (equipments.length > 0) {
        equipments.map(data => {
          $('#select-add-equipment').append(`\
            <option value="${data['id']}">${data['description']}</option> \
          `);
        })
      }

      // - Configura a lista de alocações
      if (rents.length > 0) {
        rents.map(data => {
          $('#select-add-rental').append(`\
            <option value="${data['id']}">${data['description']}</option> \
          `);
        })
      }

      // - Configura a lista de combustível
      if (fuel.length > 0) {
        fuel.map(data => {
          $('#select-add-fuel').append(`\
            <option value="${data['id']}">${data['description']}</option> \
          `);
        })
      }

      // - Configura a lista de aliquotas
      if (aliquots.length > 0) {
        aliquots.map(aliquot => {
          let percentage = `${aliquot['percentage'] * 0.01}%`;

          $('#budgets-iss-selected').append(`\
            <option value="${aliquot['percentage']}">${aliquot['city']} (${aliquot['code']}) - ${percentage}</option> \
          `)
        })

        $('#budgets-iss-selected').change(function(e) {
          $('#charges-aliquots-iss-percentage').val($(e.target).val()).priceFormat({
            prefix: '',
            suffix: '%',
            allowNegative: false
          });
        })
      }

      // - Calcula o total de encargos
      if (esocial.length > 0) {
        esocial.map(data => {
          esocial_total += Math.round(data['percentage']);
        })

        // - Encargos Sociais
        $('#workdata-text-3').val(`${esocial_total}`).priceFormat({
          prefix: '',
          suffix: '%',
          allowNegative: false
        });
      }

      // - Lista os clientes pelo centro de custo
      $('#budgets-costcenter-selected').on('change', function (e) {
        let costcenter = $(e.target).val();

        // - Configura a lista de clientes
        if (clients.length > 0) {
          $('#budgets-client-selected')
          .empty()
          .append(`\
            <option value="null" selected>Selecione um cliente</option> \
          `);

          clients.map(data => {
            if (data['costcenter'] === costcenter || costcenter === 'null')
              $('#budgets-client-selected').append(`\
                <option value="${data['id']}">${data['name']} (CPF/CNPJ - ${data['cpfcnpj']})</option> \
              `);
          })
        }
      })

      // - Converte os valores dos inputs
      $('\
        #workdata-text-3, \
        #budgets-percentage-accumulation, \
        #budgets-percentage-dangerousness, \
        #budgets-percentage-insalubrity, \
        #charges-aliquots-total-1, \
        #charges-aliquots-total-4, \
        #charges-percentage-1, \
        #charges-percentage-2, \
        #charges-aliquots-total-7, \
        #charges-aliquots-iss-percentage, \
        #charges-aliquots-pis-percentage, \
        #charges-aliquots-cofins-percentage, \
        #charges-aliquots-ir-percentage, \
        #charges-aliquots-csll-percentage, \
        #workdata-technicalreserve-1 \
        ').priceFormat({
        prefix: '',
        suffix: '%',
        allowNegative: false
      });

      $('#budgets-workinghours \
        ').priceFormat({
        prefix: '',
        suffix: ' Hora(s)',
        centsSeparator: '',
        thousandsSeparator: '',
        limit: 3,
        centsLimit: 0,
        allowNegative: false
      });

      $('#budgets-workingdays \
        ').priceFormat({
        prefix: '',
        suffix: ' Dia(s)',
        centsSeparator: '',
        thousandsSeparator: '',
        limit: 2,
        centsLimit: 0,
        allowNegative: false
      });

      $('#workdata-text-2, \
        #workdata-text-4, \
        #workdata-text-5, \
        #benefits-others-total, \
        #investment-equipment-total, \
        #investment-rental-equipment-total, \
        #fuel-vehicles-total-all, \
        #fuel-vehicles-total, \
        #charges-value-1, \
        #charges-value-2, \
        #charges-aliquots-total-2, \
        #charges-aliquots-total-3, \
        #charges-aliquots-total-5, \
        #charges-aliquots-total-6, \
        #charges-aliquots-total-8, \
        #workdata-technicalreserve-2 \
      ').priceFormat({
        prefix: 'R$ ',
        centsSeparator: ',',
        thousandsSeparator: '.'
      });

      setInterval(function() {
        calculate_wberf();
        calculate_charges();
      }, 1000)

      //- $('#equipments-depreciation').change(function (e) {
      //-   if ($(e.target).val() <= 0) {
      //-     $(e.target).val(1);
      //-   } else if ($(e.target).val() > 36) {
      //-     $(e.target).val(36);
      //-   }
      //- })

      //- $('#equipments-quantity').change(function (e) {
      //-   if ($(e.target).val() <= 0) {
      //-     $(e.target).val(1);
      //-   } else if ($(e.target).val() > 999) {
      //-     $(e.target).val(999);
      //-   }
      //- })

      //- $('#equipments-investment, #equipments-amortization, #equipments-investmentTotal').change(function (e) {
      //-   if ($(e.target).val() <= 0)
      //-     $(e.target).val(0);
      //- })

      //- //- Calculo da amortização
      //- $('#equipments-depreciation, \
      //-   #equipments-quantity, \
      //-   #equipments-investment \
      //- ').change(function() {
      //-   let investment = Number($('#equipments-investment').unmask()),
      //-     depreciation = Number($('#equipments-depreciation').val().slice(0, 2)),
      //-     quantity = Number($('#equipments-quantity').val().slice(0, 2)),
      //-     calculate = Math.floor(Number(investment/depreciation*quantity).toFixed(2));

      //-   $('#equipments-amortization').val(calculate).priceFormat({
      //-     prefix: 'R$ ',
      //-     centsSeparator: ',',
      //-     thousandsSeparator: '.'
      //-   });
      //- });

      //- //- Calculo do investimento total
      //- $('#equipments-depreciation, \
      //-   #equipments-quantity, \
      //-   #equipments-investment \
      //- ').change(function() {
      //-   let investment = Number($('#equipments-investment').unmask()),
      //-     quantity = Number($('#equipments-quantity').val().slice(0, 2)),
      //-     calculate = Math.floor(Number(investment*quantity).toFixed(2));

      //-   $('#equipments-investmentTotal').val(calculate).priceFormat({
      //-     prefix: 'R$ ',
      //-     centsSeparator: ',',
      //-     thousandsSeparator: '.'
      //-   });
      //- });
    })

    function gotoSystem() {
      return document.location = `${baseurl}/system/budgets?usr_token=${localStorage.getItem('usr-token')}&usr_internetadress=${localStorage.getItem('usr-internetadress')}`;
    }

    function generateRandomComplementID() {
      let letters = [
        'a', 'b', 'c', 'd',
        'e', 'f', 'g', 'h',
        'i', 'j', 'k', 'l',
        'm', 'n', 'o', 'p',
        'q', 'r', 's', 't',
        'u', 'v', 'w', 'x',
        'y', 'z'
      ],
      l = 8,
      str = '';

      while(l > 0) {
        str += letters[Math.floor(Math.random() * letters.length)];
        l--;
      }

      return str;
    }

    function add_workdata_select() {
      modalOpen('modal-add-workdata');
    }

    function add_benefits_select() {
      modalOpen('modal-add-benefits');
    }

    function add_equipment_select() {
      modalOpen('modal-add-equipment');
    }

    function add_rental_select() {
      modalOpen('modal-add-rental');
    }

    function add_fuel_select() {
      modalOpen('modal-add-fuel');
    }

    function add_workdata_push(id, customID) {
      let data;

      if (id === undefined) {
        data = workdata.filter(data => data['id'] === $('#select-add-workdata').val());
      } else {
        data = workdata.filter(data => data['id'] === id);
      }

      $('#select-add-workdata').val('null');
      document.getElementById('nav-home-tab').click();
      setTimeout(function() {
        $('#select-add-workdata').trigger('change');
        if (id === undefined) {
          document.getElementById(`collapse-workdata-${data['id']}`).click();
          setTimeout(function() { $('html, body').animate({scrollTop: $(document).height()}, '100'); }, 500);
        }
      }, 500);

      if (data.length > 0) {
        data = Object.assign({}, data[0]);

        let viewId = String(data['id']);

        if (id != undefined) {
          data['id'] = `${customID}`;

          $(`#li-workdata-${data['id']}`).fadeIn("fast");
        } else {
          data['id'] = `${data['id']}-${generateRandomComplementID()}`;
        }

        let first = Boolean(workdata_selected.filter(__data__ => __data__['id'] === data['id']).length <= 0),
          selectedlength = workdata_selected.filter(__data__ => __data__['id'] === data['id']).length + 1;
        workdata_selected.push(data);
        total_effective['proc'] = true;

        if (first) {
          $('#ul-workdata').append(`\
            <button class="btn btn-mave1 mb-3" id="collapse-workdata-${data['id']}" type="button" data-bs-toggle="collapse" data-bs-target="#li-workdata-${data['id']}" aria-expanded="false" aria-controls="li-workdata-${data['id']}"> \
              ${data['jobtitle']} \
            </button> \
            <li class="list-group-item collapse border mb-3" id="li-workdata-${data['id']}" style="opacity: 0"> \
              <nav class="col-12 mt-2"> \
                <div class="nav nav-tabs" id="nav-tab" role="tablist"> \
                  <a class="menu-storage col-sm-12 col-md-12 col-lg-6 col-xl-6 nav-link active" id="nav-workdata-${data['id']}-home-tab" data-bs-toggle="tab" href="#nav-workdata-${data['id']}-home" role="tab" aria-controls="nav-workdata-${data['id']}-home" aria-selected="true">Informações Gerais</a>
                  <a class="menu-storage col-sm-12 col-md-12 col-lg-6 col-xl-6 nav-link" id="nav-workdata-${data['id']}-additionalcategory-tab" data-bs-toggle="tab" href="#nav-workdata-${data['id']}-additionalcategory" role="tab" aria-controls="nav-workdata-${data['id']}-additionalcategory" aria-selected="false">Adicionais da Categoria</a>
                  <a class="menu-storage col-12 nav-link" id="nav-workdata-${data['id']}-uniforms-tab" data-bs-toggle="tab" href="#nav-workdata-${data['id']}-uniforms" role="tab" aria-controls="nav-workdata-${data['id']}-uniforms" aria-selected="false">Informações do uniforme</a>
                </div> \
              </nav> \
              <div class="tab-content col-12" id="nav-tabContent"> \
                <div class="tab-pane fade show active" id="nav-workdata-${data['id']}-home" role="tabpanel" aria-labelledby="nav-workdata-${data['id']}-home-tab"> \
                  <div class="row border-bottom mt-3"> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-ID-${data['id']}">Código</label> \
                      <input type="text" class="form-control" id="workdata-ID-${data['id']}" value="${viewId}" disabled> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-jobtitle-${data['id']}">Cargo/Função</label> \
                      <input type="text" class="form-control" id="workdata-jobtitle-${data['id']}" value="${data['jobtitle']}" disabled> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-scale-${data['id']}">Escala</label> \
                      <input type="text" class="form-control" id="workdata-scale-${data['id']}" value="${data['scale']}" disabled> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-salary-${data['id']}">Piso Salarial</label> \
                      <input type="text" class="form-control" id="workdata-salary-${data['id']}" value="${data['salary']}" disabled> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-time-start-${data['id']}">Horario de entrada</label> \
                      <input type="text" class="form-control" id="workdata-time-start-${data['id']}" value="${data['time']['start']}" disabled> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-time-end-${data['id']}">Horario de saida</label> \
                      <input type="text" class="form-control" id="workdata-time-end-${data['id']}" value="${data['time']['end']}" disabled> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-dayswork-${data['id']}">Dias de trabalho</label> \
                      <input type="text" class="form-control" id="workdata-dayswork-${data['id']}" value="${data['dayswork']}" disabled> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-dsr-${data['id']}">DSR</label> \
                      <input type="text" class="form-control" id="workdata-dsr-${data['id']}" value="0" disabled> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-quantity-${data['id']}">Quantidade</label> \
                      <input type="text" class="form-control" id="workdata-quantity-${data['id']}" value="0" disabled> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-total-${data['id']}">R$ Total</label> \
                      <input type="text" class="form-control" id="workdata-total-${data['id']}" value="0" disabled> \
                    </div> \
                  </div> \
                </div> \
                <div class="tab-pane fade show" id="nav-workdata-${data['id']}-additionalcategory" role="tabpanel" aria-labelledby="nav-workdata-${data['id']}-additionalcategory-tab"> \
                  <div class="row border-bottom mt-3"> \
                    <div class="col-12 mb-2"> \
                      <h4 class="fw-bold text-center text-muted border-bottom p-2">Adicional Noturno</h4> \
                    </div>\
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-additionalnight-status-${data['id']}">Status</label> \
                      <input type="text" class="form-control" id="workdata-additionalnight-status-${data['id']}" value="${data['additionalnight']['enabled'] === false ? 'Desabilitado' : 'Habilitado'}" disabled> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-additionalnight-value-${data['id']}">Valor</label> \
                      <input type="text" class="form-control" id="workdata-additionalnight-value-${data['id']}" value="${data['additionalnight']['value']}" disabled> \
                    </div> \
                    <div class="col-12 mb-2"> \
                      <h4 class="fw-bold text-center text-muted border-bottom p-2">Gratificação</h4> \
                    </div>\
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-gratification-status-${data['id']}">Status</label> \
                      <input type="text" class="form-control" id="workdata-gratification-status-${data['id']}" value="${data['gratification']['enabled'] === false ? 'Desabilitado' : 'Habilitado'}" disabled> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-gratification-value-${data['id']}">Valor</label> \
                      <input type="text" class="form-control" id="workdata-gratification-value-${data['id']}" value="${data['gratification']['value']}" disabled> \
                    </div> \
                    <div class="col-12 mb-2"> \
                      <h4 class="fw-bold text-center text-muted border-bottom p-2">Acumulo</h4> \
                    </div>\
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-accumulation-status-${data['id']}">Status</label> \
                      <select class="form-select" id="workdata-accumulation-status-${data['id']}"> \
                        <option selected value="false">Desabilitado</option> \
                        <option value="true">Habilitado</option> \
                      </select> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-accumulation-value-${data['id']}">Valor</label> \
                      <input type="text" class="form-control" id="workdata-accumulation-value-${data['id']}" value="0" disabled> \
                    </div> \
                    <div class="col-12 mb-2"> \
                      <h4 class="fw-bold text-center text-muted border-bottom p-2">Periculosidade</h4> \
                    </div>\
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-dangerousness-status-${data['id']}">Status</label> \
                      <select class="form-select" id="workdata-dangerousness-status-${data['id']}"> \
                        <option selected value="false">Desabilitado</option> \
                        <option value="true">Habilitado</option> \
                      </select> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-dangerousness-value-${data['id']}">Valor</label> \
                      <input type="text" class="form-control" id="workdata-dangerousness-value-${data['id']}" value="0" disabled> \
                    </div> \
                    <div class="col-12 mb-2"> \
                      <h4 class="fw-bold text-center text-muted border-bottom p-2">Insalubridade</h4> \
                    </div>\
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-insalubrity-status-${data['id']}">Status</label> \
                      <select class="form-select" id="workdata-insalubrity-status-${data['id']}"> \
                        <option selected value="false">Desabilitado</option> \
                        <option value="true">Habilitado</option> \
                      </select> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-insalubrity-value-${data['id']}">Valor</label> \
                      <input type="text" class="form-control" id="workdata-insalubrity-value-${data['id']}" value="0" disabled> \
                    </div> \
                    <div class="col-12 mb-2"> \
                      <h4 class="fw-bold text-center text-muted border-bottom p-2">Intervalo ou Hora Extra 50%</h4> \
                    </div>\
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-overtime-fifty-status-${data['id']}">Status</label> \
                      <select class="form-select" id="workdata-overtime-fifty-status-${data['id']}"> \
                        <option selected value="false">Desabilitado</option> \
                        <option value="true">Habilitado</option> \
                      </select> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-overtime-fifty-value-${data['id']}">Valor</label> \
                      <input type="text" class="form-control" id="workdata-overtime-fifty-value-${data['id']}" value="0" disabled> \
                    </div> \
                    <div class="col-12 mb-2"> \
                      <h4 class="fw-bold text-center text-muted border-bottom p-2">Hora Extra 100%</h4> \
                    </div>\
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-overtime-hundred-status-${data['id']}">Status</label> \
                      <select class="form-select" id="workdata-overtime-hundred-status-${data['id']}"> \
                        <option selected value="false">Desabilitado</option> \
                        <option value="true">Habilitado</option> \
                      </select> \
                    </div> \
                    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                      <label for="workdata-overtime-hundred-value-${data['id']}">Valor</label> \
                      <input type="text" class="form-control" id="workdata-overtime-hundred-value-${data['id']}" value="0" disabled> \
                    </div> \
                  </div> \
                </div> \
                <div class="tab-pane fade show" id="nav-workdata-${data['id']}-uniforms" role="tabpanel" aria-labelledby="nav-workdata-${data['id']}-uniforms-tab"> \
                  <div class="row border-bottom mt-3"> \
                    <div class="col-12 mb-5"> \
                      <label for="workdata-uniforms-monthlycost-${data['id']}">Custo Mensal</label> \
                      <input type="text" class="form-control" id="workdata-uniforms-monthlycost-${data['id']}" placeholder="0" disabled> \
                    </div> \
                    <div class="col-12 mb-2"> \
                      <h4 class="fw-bold text-center text-muted border-bottom p-2">Lista de uniformes</h4> \
                    </div> \
                    <ul class="list-group p-2 mb-5 col-12" id="ul-workdata-uniforms-${data['id']}"></ul> \
                  </div> \
                </div> \
              </div> \
              <button type="button" class="btn btn-warning col-12 mt-3" data-bs-dismiss="modal" id="button-workdata-duplicate-${data['id']}">Duplicar</button> \
              <button type="button" class="btn btn-danger col-12 mt-2 mb-3" data-bs-dismiss="modal" id="button-workdata-remove-${data['id']}">Remover</button> \
            </li> \
          `)

          $(`#button-workdata-duplicate-${data['id']}`).click(function() {
            $(`#button-workdata-duplicate-${data['id']}, #button-workdata-remove-${data['id']}`).attr('disabled', true);

            $(`#li-workdata-${data['id']}`).fadeOut("slow", function () {
              add_workdata_push(viewId, data['id']);
            })
          })

          $(`#button-workdata-remove-${data['id']}`).click(function () {
            $(`#button-workdata-duplicate-${data['id']}, #button-workdata-remove-${data['id']}`).attr('disabled', true);

            $(`#li-workdata-${data['id']}`).fadeOut("slow", function () {
              let i = 0,
                l = workdata_selected.length;

              for(; i < l; i++) {
                if (workdata_selected[i]['id'] === data['id']) {
                  workdata_selected.splice(i, 1);
                  break;
                }
              }

              selectedlength = workdata_selected.filter(__data__ => __data__['id'] === data['id']).length;

              if (selectedlength <= 0) {
                $(`#collapse-workdata-${data['id']}`).remove();
                $(`#li-workdata-${data['id']}`).remove();
              } else {
                $(`#li-workdata-${data['id']}`).fadeIn("fast");
                $(`#button-workdata-duplicate-${data['id']}, #button-workdata-remove-${data['id']}`).attr('disabled', false);
              }

              //- Remove o calculo final
              // - Total de efetivo
              let total = 0;
              workdata_selected.map(__data__ => { total += Number($(`#workdata-total-${__data__['id']}`).unmask()) })
              total_effective['quantity'] = Number(workdata_selected.length);
              total_effective['price'] = Math.round(Number(total).toFixed(2));

              $('#workdata-text-1').val(`${total_effective['quantity']}`);
              $('#workdata-text-2').val(`${total_effective['price']}`).priceFormat({
                prefix: 'R$ ',
                centsSeparator: ',',
                thousandsSeparator: '.'
              })

              // - Reserva Técnica
              let technicalreserve_value = Number($('#workdata-technicalreserve-1').unmask());
              technicalreserve_total = Math.round(Number((technicalreserve_value*0.01)*total_effective['price']/100).toFixed(2));
              $('#workdata-technicalreserve-2').val(technicalreserve_total).priceFormat({
                prefix: 'R$ ',
                centsSeparator: ',',
                thousandsSeparator: '.'
              })

              // - Encargos Sociais
              $('#workdata-text-3').val(`${esocial_total}`).priceFormat({
                prefix: '',
                suffix: '%',
                allowNegative: false
              });

              let esocial_value = Math.round(Number((esocial_total*0.01)*total_effective['price']/100).toFixed(2));

              $('#workdata-text-4').val(`${esocial_value}`).priceFormat({
                prefix: 'R$ ',
                centsSeparator: ',',
                thousandsSeparator: '.'
              })

              // - Total do Efetivo (Salários + Encargos)
              $('#workdata-text-5').val(`${Math.round(Number(total_effective['price']+esocial_value).toFixed(2))}`).priceFormat({
                prefix: 'R$ ',
                centsSeparator: ',',
                thousandsSeparator: '.'
              })

              // Define a quantidade selecionada
              $(`#workdata-quantity-${data['id']}`).val(Number(selectedlength));

              // - Calculo dos benefícios
              benefits_calculations();

              //- Faz a listagem do uniforme
              listuniforms('remove');
            });
          })
        }

        $(`#li-workdata-${data['id']}`).animate({ opacity: 1 }, 1000);
        $(`#button-workdata-duplicate-${data['id']}, #button-workdata-remove-${data['id']}`).attr('disabled', false);

        $(`#workdata-quantity-${data['id']}`).val(Number(selectedlength));

        // - Calculo dos benefícios
        benefits_calculations();

        //- Calculo do acumulo
        function accumulation() {
          let salary = Number($(`#workdata-salary-${data['id']}`).unmask()),
            percentage = parseFloat($(`#budgets-percentage-accumulation`).val().replace('%', '').trim()),
            calculate = Math.round(Number(salary*percentage/100).toFixed(2));
            return calculate;
        }

        $('#budgets-percentage-accumulation').change(function (e) {
          $(`#workdata-accumulation-value-${data['id']}`).val(accumulation()).priceFormat({
            prefix: 'R$ ',
            centsSeparator: ',',
            thousandsSeparator: '.'
          }).trigger("change");
        })
        $(`#workdata-accumulation-value-${data['id']}`).val(accumulation());

        //- Calculo do Periculosidade
        function dangerousness() {
          let salary = Number($(`#workdata-salary-${data['id']}`).unmask()),
            percentage = parseFloat($(`#budgets-percentage-dangerousness`).val().replace('%', '').trim()),
            calculate = Math.round(Number(salary*percentage/100).toFixed(2));
            return calculate;
        }

        $('#budgets-percentage-dangerousness').change(function (e) {
          $(`#workdata-dangerousness-value-${data['id']}`).val(dangerousness()).priceFormat({
            prefix: 'R$ ',
            centsSeparator: ',',
            thousandsSeparator: '.'
          }).trigger("change");
        })
        $(`#workdata-dangerousness-value-${data['id']}`).val(dangerousness());

        //- Calculo do Insalubridade
        function insalubrity() {
          let salary = Number($(`#workdata-salary-${data['id']}`).unmask()),
            percentage = parseFloat($(`#budgets-percentage-insalubrity`).val().replace('%', '').trim()),
            calculate = Math.round(Number(salary*percentage/100).toFixed(2));
            return calculate;
        }

        $('#budgets-percentage-insalubrity').change(function (e) {
          $(`#workdata-insalubrity-value-${data['id']}`).val(insalubrity()).priceFormat({
            prefix: 'R$ ',
            centsSeparator: ',',
            thousandsSeparator: '.'
          }).trigger("change");
        })
        $(`#workdata-insalubrity-value-${data['id']}`).val(insalubrity());

        //- Calculo do Intervalo ou Hora Extra 50%
        function overtimeFifty() {
          let salary = Number($(`#workdata-salary-${data['id']}`).unmask()),
            dangerousness = Number($(`#workdata-dangerousness-value-${data['id']}`).unmask()),
            insalubrity = Number($(`#workdata-insalubrity-value-${data['id']}`).unmask()),
            workinghours = parseFloat($(`#budgets-workinghours`).val().replace('Hora(s)', '').trim()),
            workingdays = parseFloat($(`#budgets-workingdays`).val().replace('Dia(s)', '').trim()),
            calculate = Math.round(Number((salary+dangerousness+insalubrity)/workinghours*1.5*workingdays).toFixed(2));
            return calculate;
        }

        $(`#workdata-dangerousness-value-${data['id']}, \
          #workdata-insalubrity-value-${data['id']}, \
          #budgets-workinghours, \
          #budgets-workingdays \
        `).change(function (e) {
          $(`#workdata-overtime-fifty-value-${data['id']}`).val(overtimeFifty()).priceFormat({
            prefix: 'R$ ',
            centsSeparator: ',',
            thousandsSeparator: '.'
          }).trigger("change");
        })
        $(`#workdata-overtime-fifty-value-${data['id']}`).val(overtimeFifty());

        //- Calculo da Hora Extra 100%
        function overtimeHundred() {
          let salary = Number($(`#workdata-salary-${data['id']}`).unmask()),
            dangerousness = Number($(`#workdata-dangerousness-value-${data['id']}`).unmask()),
            insalubrity = Number($(`#workdata-insalubrity-value-${data['id']}`).unmask()),
            workinghours = parseFloat($(`#budgets-workinghours`).val().replace('Hora(s)', '').trim()),
            workingdays = parseFloat($(`#budgets-workingdays`).val().replace('Dia(s)', '').trim()),
            calculate = Math.round(Number((salary+dangerousness+insalubrity)/workinghours*2*workingdays).toFixed(2));
            return calculate;
        }

        $(`#workdata-dangerousness-value-${data['id']}, \
          #workdata-insalubrity-value-${data['id']}, \
          #budgets-workinghours, \
          #budgets-workingdays \
        `).change(function (e) {
          $(`#workdata-overtime-hundred-value-${data['id']}`).val(overtimeHundred()).priceFormat({
            prefix: 'R$ ',
            centsSeparator: ',',
            thousandsSeparator: '.'
          }).trigger("change");
        })
        $(`#workdata-overtime-hundred-value-${data['id']}`).val(overtimeHundred());

        //- Calculo do DSR
        function dsr() {
          let gratification = data['gratification']['enabled'] === false ? 0 : Number($(`#workdata-gratification-value-${data['id']}`).unmask()),
            additionalnight = data['additionalnight']['enabled'] === false ? 0 : Number($(`#workdata-additionalnight-value-${data['id']}`).unmask()),
            accumulation = $(`#workdata-accumulation-status-${data['id']}`).val() === "false" ? 0 : Number($(`#workdata-accumulation-value-${data['id']}`).unmask()),
            dangerousness = $(`#workdata-dangerousness-status-${data['id']}`).val() === "false" ? 0 : Number($(`#workdata-dangerousness-value-${data['id']}`).unmask()),
            insalubrity = $(`#workdata-insalubrity-status-${data['id']}`).val() === "false" ? 0 : Number($(`#workdata-insalubrity-value-${data['id']}`).unmask()),
            overtimeFifty = $(`#workdata-overtime-fifty-status-${data['id']}`).val() === "false" ? 0 : Number($(`#workdata-overtime-fifty-value-${data['id']}`).unmask()),
            overtimeHundred = $(`#workdata-overtime-hundred-status-${data['id']}`).val() === "false" ? 0 : Number($(`#workdata-overtime-hundred-value-${data['id']}`).unmask()),
            calculate = Math.round(Number((gratification+accumulation+dangerousness+insalubrity+overtimeFifty+overtimeHundred+additionalnight)/25*5).toFixed(2));

            return calculate;
        }

        $(`#workdata-gratification-value-${data['id']}, \
          #workdata-accumulation-value-${data['id']}, \
          #workdata-dangerousness-value-${data['id']}, \
          #workdata-insalubrity-value-${data['id']}, \
          #workdata-overtime-fifty-value-${data['id']}, \
          #workdata-overtime-hundred-value-${data['id']}, \
          #workdata-additionalnight-value-${data['id']}, \
          #workdata-gratification-status-${data['id']}, \
          #workdata-accumulation-status-${data['id']}, \
          #workdata-dangerousness-status-${data['id']}, \
          #workdata-insalubrity-status-${data['id']}, \
          #workdata-overtime-fifty-status-${data['id']}, \
          #workdata-overtime-hundred-status-${data['id']}, \
          #workdata-additionalnight-status-${data['id']} \
        `).change(function (e) {
          $(`#workdata-dsr-${data['id']}`).val(dsr()).priceFormat({
            prefix: 'R$ ',
            centsSeparator: ',',
            thousandsSeparator: '.'
          }).trigger("change");
        })
        $(`#workdata-dsr-${data['id']}`).val(dsr());

        //- Calculo do R$ TOTAL
        function total() {
          let salary = Number($(`#workdata-salary-${data['id']}`).unmask()),
            dsr = Number($(`#workdata-dsr-${data['id']}`).unmask()),
            gratification = data['gratification']['enabled'] === false ? 0 : Number($(`#workdata-gratification-value-${data['id']}`).unmask()),
            additionalnight = data['additionalnight']['enabled'] === false ? 0 : Number($(`#workdata-additionalnight-value-${data['id']}`).unmask()),
            accumulation = $(`#workdata-accumulation-status-${data['id']}`).val() === "false" ? 0 : Number($(`#workdata-accumulation-value-${data['id']}`).unmask()),
            dangerousness = $(`#workdata-dangerousness-status-${data['id']}`).val() === "false" ? 0 : Number($(`#workdata-dangerousness-value-${data['id']}`).unmask()),
            insalubrity = $(`#workdata-insalubrity-status-${data['id']}`).val() === "false" ? 0 : Number($(`#workdata-insalubrity-value-${data['id']}`).unmask()),
            overtimeFifty = $(`#workdata-overtime-fifty-status-${data['id']}`).val() === "false" ? 0 : Number($(`#workdata-overtime-fifty-value-${data['id']}`).unmask()),
            overtimeHundred = $(`#workdata-overtime-hundred-status-${data['id']}`).val() === "false" ? 0 : Number($(`#workdata-overtime-hundred-value-${data['id']}`).unmask()),
            calculate = Math.round(Number(salary+dsr+gratification+accumulation+dangerousness+insalubrity+overtimeFifty+overtimeHundred+additionalnight).toFixed(2));

            return calculate;
        }

        $(`#workdata-dsr-${data['id']}, \
          #workdata-gratification-value-${data['id']}, \
          #workdata-accumulation-value-${data['id']}, \
          #workdata-dangerousness-value-${data['id']}, \
          #workdata-insalubrity-value-${data['id']}, \
          #workdata-overtime-fifty-value-${data['id']}, \
          #workdata-overtime-hundred-value-${data['id']}, \
          #workdata-additionalnight-value-${data['id']}, \
          #workdata-gratification-status-${data['id']}, \
          #workdata-accumulation-status-${data['id']}, \
          #workdata-dangerousness-status-${data['id']}, \
          #workdata-insalubrity-status-${data['id']}, \
          #workdata-overtime-fifty-status-${data['id']}, \
          #workdata-overtime-hundred-status-${data['id']}, \
          #workdata-additionalnight-status-${data['id']} \
        `).change(function (e) {
          $(`#workdata-total-${data['id']}`).val(total()).priceFormat({
            prefix: 'R$ ',
            centsSeparator: ',',
            thousandsSeparator: '.'
          }).trigger("change");
        })
        $(`#workdata-total-${data['id']}`).val(total());

        //- Calculo final
        function fin() {
          // - Total de efetivo
          let total = 0;
          workdata_selected.map(__data__ => total += Number($(`#workdata-total-${__data__['id']}`).unmask()))
          total_effective['quantity'] = Number(workdata_selected.length);
          total_effective['price'] = Math.round(Number(total).toFixed(2));

          $('#workdata-text-1').val(`${total_effective['quantity']}`);
          $('#workdata-text-2').val(`${total_effective['price']}`).priceFormat({
            prefix: 'R$ ',
            centsSeparator: ',',
            thousandsSeparator: '.'
          })

          // - Reserva Técnica
          let technicalreserve_value = Number($('#workdata-technicalreserve-1').unmask());
          technicalreserve_total = Math.round(Number((technicalreserve_value*0.01)*total_effective['price']/100).toFixed(2));
          $('#workdata-technicalreserve-2').val(technicalreserve_total).priceFormat({
            prefix: 'R$ ',
            centsSeparator: ',',
            thousandsSeparator: '.'
          })

          // - Encargos Sociais
          $('#workdata-text-3').val(`${esocial_total}`).priceFormat({
            prefix: '',
            suffix: '%',
            allowNegative: false
          });

          let esocial_value = Math.round(Number((esocial_total*0.01)*total_effective['price']/100).toFixed(2));

          $('#workdata-text-4').val(`${esocial_value}`).priceFormat({
            prefix: 'R$ ',
            centsSeparator: ',',
            thousandsSeparator: '.'
          })

          // - Total do Efetivo (Salários + Encargos)
          $('#workdata-text-5').val(`${Math.round(Number(total_effective['price']+esocial_value).toFixed(2))}`).priceFormat({
            prefix: 'R$ ',
            centsSeparator: ',',
            thousandsSeparator: '.'
          })

          total_effective['proc'] = false;
        } 

        if(total_effective['proc']) fin();

        $(`#workdata-gratification-value-${data['id']}, \
          #workdata-accumulation-value-${data['id']}, \
          #workdata-dangerousness-value-${data['id']}, \
          #workdata-insalubrity-value-${data['id']}, \
          #workdata-overtime-fifty-value-${data['id']}, \
          #workdata-overtime-hundred-value-${data['id']}, \
          #workdata-additionalnight-value-${data['id']}, \
          #workdata-gratification-status-${data['id']}, \
          #workdata-accumulation-status-${data['id']}, \
          #workdata-dangerousness-status-${data['id']}, \
          #workdata-insalubrity-status-${data['id']}, \
          #workdata-overtime-fifty-status-${data['id']}, \
          #workdata-overtime-hundred-status-${data['id']}, \
          #workdata-additionalnight-status-${data['id']} \
        `).change(fin.bind(this));


        //- Faz a listagem do uniforme
        listuniforms();

        function listuniforms(append) {
          if (append != undefined)
            first = false;

          if(uniforms[viewId]) {
            uniforms[viewId].map(uniform => {
              if (first)
                $(`#ul-workdata-uniforms-${data['id']}`).append(`\
                  <li class="list-group-item mb-3"> \
                    <div class="row border-bottom mt-3"> \
                      <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                        <label for="workdata-${data['id']}-uniform-ID-${uniform['id']}">Código</label> \
                        <input type="text" class="form-control" id="workdata-${data['id']}-uniform-ID-${uniform['id']}" value="${uniform['id']}" disabled> \
                      </div> \
                      <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                        <label for="workdata-${data['id']}-uniform-description-${uniform['id']}">Descrição</label> \
                        <input type="text" class="form-control" id="workdata-${data['id']}-uniform-description-${uniform['id']}" value="${uniform['description']}" disabled> \
                      </div> \
                      <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                        <label for="workdata-${data['id']}-uniform-quantity-${uniform['id']}">Quantidade</label> \
                        <input type="text" class="form-control" id="workdata-${data['id']}-uniform-quantity-${uniform['id']}" value="${uniform['quantity']}" disabled> \
                      </div> \
                      <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                        <label for="workdata-${data['id']}-uniform-unitary-${uniform['id']}">Valor unitario</label> \
                        <input type="text" class="form-control" id="workdata-${data['id']}-uniform-unitary-${uniform['id']}" value="${uniform['unitary']}" disabled> \
                      </div> \
                      <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                        <label for="workdata-${data['id']}-uniform-total-${uniform['id']}">Valor total</label> \
                        <input type="text" class="form-control" id="workdata-${data['id']}-uniform-total-${uniform['id']}" value="${uniform['total']}" disabled> \
                      </div> \
                      <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                        <label for="workdata-${data['id']}-uniform-monthlycost-${uniform['id']}">Custo Mensal</label> \
                        <input type="text" class="form-control" id="workdata-${data['id']}-uniform-monthlycost-${uniform['id']}" value="${uniform['monthlycost']}" disabled> \
                      </div> \
                    </div> \
                  </li> \
                `)

              let quantity = Number($(`#workdata-quantity-${data['id']}`).val());

              $(`#workdata-uniforms-monthlycost-${data['id']}`).val(monthlycost_total[viewId] * quantity);
              $(`#workdata-${data['id']}-uniform-quantity-${uniform['id']}`).val(uniform['quantity'] * quantity);
              $(`#workdata-${data['id']}-uniform-unitary-${uniform['id']}`).val(uniform['unitary'] * quantity);
              $(`#workdata-${data['id']}-uniform-total-${uniform['id']}`).val(uniform['total'] * quantity);
              $(`#workdata-${data['id']}-uniform-monthlycost-${uniform['id']}`).val(uniform['monthlycost'] * quantity);

              $(`#workdata-salary-${data['id']}, \
                #workdata-dsr-${data['id']}, \
                #workdata-total-${data['id']}, \
                #workdata-additionalnight-value-${data['id']}, \
                #workdata-gratification-value-${data['id']}, \
                #workdata-accumulation-value-${data['id']}, \
                #workdata-dangerousness-value-${data['id']}, \
                #workdata-insalubrity-value-${data['id']}, \
                #workdata-overtime-fifty-value-${data['id']}, \
                #workdata-overtime-hundred-value-${data['id']}, \
                #workdata-uniforms-monthlycost-${data['id']}, \
                #workdata-${data['id']}-uniform-unitary-${uniform['id']}, \
                #workdata-${data['id']}-uniform-total-${uniform['id']}, \
                #workdata-${data['id']}-uniform-monthlycost-${uniform['id']} \
                `).priceFormat({
                  prefix: 'R$ ',
                  centsSeparator: ',',
                  thousandsSeparator: '.'
              })
            })
          }
        }
      }
    }

    function add_benefits_push() {
      let data = benefits.filter(data => data['id'] === $('#select-add-benefits').val()),
        complementID = generateRandomComplementID();

      $('#select-add-benefits').val('null');
      document.getElementById('nav-benefits-others-tab').click();
      setTimeout(function() {
        $('#select-add-benefits').trigger('change');
        $('html, body').animate({scrollTop: $(document).height()}, '100');
      }, 500);

      if (data.length > 0) {
        data = Object.assign({}, data[0]);
        data['id'] = `${data['id']}-${complementID}`;
        benefits_selected.push(data);

        $('#ul-benefits').append(`\
          <li class="list-group-item border mb-3" id="li-benefits-${data['id']}" style="opacity: 0"> \
            <div class="row border-bottom mt-3"> \
              <div class="col-12 mb-2"> \
                <h4 class="fw-bold text-center text-muted border-bottom p-2">${data['description']}</h4> \
              </div> \
              <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                <label for="benefit-quantity-${data['id']}">Quantidade</label> \
                <input type="text" class="form-control" id="benefit-quantity-${data['id']}" value="${data['quantity'] <= 0 ? '-': data['quantity']}" disabled> \
              </div> \
              <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                <label for="benefit-value-${data['id']}">Valor</label> \
                <input type="text" class="form-control" id="benefit-value-${data['id']}" value="${data['value']}"> \
              </div> \
              <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                <label for="benefit-value-calculation-${data['id']}">Valor Calculado</label> \
                <input type="text" class="form-control" id="benefit-value-calculation-${data['id']}" value="${data['value']}" disabled> \
              </div> \
              <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                <label for="benefit-total-${data['id']}">R$ Total</label> \
                <input type="text" class="form-control" id="benefit-total-${data['id']}" value="${data['total']}" disabled> \
              </div> \
            </div> \
            <a class="btn btn-danger text-white col-12 p-2 mt-2" role="button" id="button-benefits-remove-${data['id']}">Remover</a>
          </li> \
        `)

        $(`#button-benefits-remove-${data['id']}`).click(function () {
          $(`#button-benefits-remove-${data['id']}`).attr('disabled', true);

          $(`#li-benefits-${data['id']}`).fadeOut("slow", function () {
            $(`#li-benefits-${data['id']}`).remove();
              benefits_selected = benefits_selected.filter(__data__ => __data__['id'] != data['id']);
              benefits_calculations();
          });
        })

        $(`#li-benefits-${data['id']}`).animate({ opacity: 1 }, 1000);
        benefits_calculations();
      }
    }

    let benefits_values_changed = {};
    function benefits_calculations() {
      benefits_selected.map(data => {
        if (benefits_values_changed[data['id']] != undefined) {
          switch(data['description']) {
            case 'Benefícios Social Familiar Facilities':
            case 'Benefícios Social Familiar Segurança':
            case 'PLR Facilities':
            case 'PLR Segurança':
            case 'Seguro de vida Segurança':        
            case 'Vale Transporte (escala 4x2)':
            case 'Vale Transporte (escala 5x2)':
            case 'Vale Transporte (escala 6x1)':
            case 'Vale Transporte (escala 6x2)':
            case 'Vale Transporte (escala 12x36)':
            case 'Vale Refeição (escala 4x2)':
            case 'Vale Refeição (escala 5x2)':
            case 'Vale Refeição (escala 6x1)':
            case 'Vale Refeição (escala 6x2)':
            case 'Vale Refeição (escala 12x36)':
            case 'Cesta Básica':
            case 'ASO / Exames':
              data['total'] = Number(benefits_values_changed[data['id']]);
              data['value'] = Number(benefits_values_changed[data['id']]);
              $(`#benefit-value-calculation-${data['id']}`).val(data['value']);
            break;
            default:
              data['value'] = Number(benefits_values_changed[data['id']]);
            break;
          }
        }

        $(`#benefit-value-${data['id']}`).val(data['value']);
        $(`#benefit-total-${data['id']}`).val(data['total']);
        $(`#benefit-quantity-${data['id']}`).val(data['quantity'] <= 0 ? '-': data['quantity']);

        $(`#benefit-value-${data['id']}`).change(function(e) {
          benefits_values_changed[data['id']] = $(e.target).unmask();
          benefits_calculations();
        })

        // Calculo do beneficio
        if (data['description'] === 'PLR Facilities') {
          if (workdata_selected.length > 0) {
            let calculate = 0,
              salary = 0,
              workingdays = 0,
              quantity = 0;

            workdata_selected.map(data => {
              if (data['scale'] === '12x36') {
                salary += data['salary'];
                workingdays += data['dayswork'];
                quantity++;
              }
            })

            if (salary > 0) {
              calculate = Math.round(Number((data['value']/12*0.85).toFixed(2)));

              $(`#benefit-value-calculation-${data['id']}`).val(calculate);
              $(`#benefit-total-${data['id']}`).val(Math.round(calculate*quantity));
              $(`#benefit-quantity-${data['id']}`).val(quantity);
            }
          }
        } else if (data['description'] === 'Vale Transporte (escala 12x36)') {
          if (workdata_selected.length > 0) {
            let calculate = 0,
              salary = 0,
              workingdays = 0,
              quantity = 0;

            workdata_selected.map(data => {
              if (data['scale'] === '12x36') {
                salary += data['salary'];
                workingdays += data['dayswork'];
                quantity++;
              }
            })

            if (salary > 0) {
              calculate = Math.round(Number((data['value']*2*workingdays-(salary*0.06)).toFixed(2)));

              $(`#benefit-value-calculation-${data['id']}`).val(calculate);
              $(`#benefit-total-${data['id']}`).val(Math.round(calculate*quantity));
              $(`#benefit-quantity-${data['id']}`).val(quantity);
            }
          }
        } else if (data['description'] === 'Vale Transporte (escala 6x2)') {
          if (workdata_selected.length > 0) {
            let calculate = 0,
              salary = 0,
              workingdays = 0,
              quantity = 0;

            workdata_selected.map(data => {
              if (data['scale'] === '6x2') {
                salary += data['salary'];
                workingdays += data['dayswork'];
                quantity++;
              }
            })

            if (salary > 0) {
              calculate = Math.round(Number((data['value']*2*workingdays-(salary*0.06)).toFixed(2)));

              $(`#benefit-value-calculation-${data['id']}`).val(calculate);
              $(`#benefit-total-${data['id']}`).val(Math.round(calculate*quantity));
              $(`#benefit-quantity-${data['id']}`).val(quantity);
            }
          }
        } else if (data['description'] === 'Vale Transporte (escala 6x1)') {
          if (workdata_selected.length > 0) {
            let calculate = 0,
              salary = 0,
              workingdays = 0,
              quantity = 0;

            workdata_selected.map(data => {
              if (data['scale'] === '6x1') {
                salary += data['salary'];
                workingdays += data['dayswork'];
                quantity++;
              }
            })

            if (salary > 0) {
              calculate = Math.round(Number((data['value']*2*workingdays-(salary*0.06)).toFixed(2)));

              $(`#benefit-value-calculation-${data['id']}`).val(calculate);
              $(`#benefit-total-${data['id']}`).val(Math.round(calculate*quantity));
              $(`#benefit-quantity-${data['id']}`).val(quantity);
            }
          }
        } else if (data['description'] === 'Vale Transporte (escala 5x2)') {
          if (workdata_selected.length > 0) {
            let calculate = 0,
              salary = 0,
              workingdays = 0,
              quantity = 0;

            workdata_selected.map(data => {
              if (data['scale'] === '5x2') {
                salary += data['salary'];
                workingdays += data['dayswork'];
                quantity++;
              }
            })

            if (salary > 0) {
              calculate = Math.round(Number((data['value']*2*workingdays-(salary*0.06)).toFixed(2)));

              $(`#benefit-value-calculation-${data['id']}`).val(calculate);
              $(`#benefit-total-${data['id']}`).val(Math.round(calculate*quantity));
              $(`#benefit-quantity-${data['id']}`).val(quantity);
            }
          }
        } else if (data['description'] === 'Vale Transporte (escala 4x2)') {
          if (workdata_selected.length > 0) {
            let calculate = 0,
              salary = 0,
              workingdays = 0,
              quantity = 0;

            workdata_selected.map(data => {
              if (data['scale'] === '4x2') {
                salary += data['salary'];
                workingdays += data['dayswork'];
                quantity++;
              }
            })

            if (salary > 0) {
              calculate = Math.round(Number((data['value']*2*workingdays-(salary*0.06)).toFixed(2)));

              $(`#benefit-value-calculation-${data['id']}`).val(calculate);
              $(`#benefit-total-${data['id']}`).val(Math.round(calculate*quantity));
              $(`#benefit-quantity-${data['id']}`).val(quantity);
            }
          }
        } else if (data['description'] === 'Vale Refeição (escala 12x36)') {
          if (workdata_selected.length > 0) {
            let calculate = 0,
              salary = 0,
              workingdays = 0,
              quantity = 0;

            workdata_selected.map(data => {
              if (data['scale'] === '12x36') {
                salary += data['salary'];
                workingdays += data['dayswork'];
                quantity++;
              }
            })

            if (salary > 0) {
              calculate = Math.round(Number((data['value']*workingdays).toFixed(2)));

              $(`#benefit-value-calculation-${data['id']}`).val(calculate);
              $(`#benefit-total-${data['id']}`).val(Math.round(calculate*quantity));
              $(`#benefit-quantity-${data['id']}`).val(quantity);
            }
          }
        } else if (data['description'] === 'Vale Refeição (escala 6x2)') {
          if (workdata_selected.length > 0) {
            let calculate = 0,
              salary = 0,
              workingdays = 0,
              quantity = 0;

            workdata_selected.map(data => {
              if (data['scale'] === '6x2') {
                salary += data['salary'];
                workingdays += data['dayswork'];
                quantity++;
              }
            })

            if (salary > 0) {
              calculate = Math.round(Number((data['value']*workingdays).toFixed(2)));

              $(`#benefit-value-calculation-${data['id']}`).val(calculate);
              $(`#benefit-total-${data['id']}`).val(Math.round(calculate*quantity));
              $(`#benefit-quantity-${data['id']}`).val(quantity);
            }
          }
        } else if (data['description'] === 'Vale Refeição (escala 6x1)') {
          if (workdata_selected.length > 0) {
            let calculate = 0,
              salary = 0,
              workingdays = 0,
              quantity = 0;

            workdata_selected.map(data => {
              if (data['scale'] === '6x1') {
                salary += data['salary'];
                workingdays += data['dayswork'];
                quantity++;
              }
            })

            if (salary > 0) {
              calculate = Math.round(Number((data['value']*workingdays).toFixed(2)));

              $(`#benefit-value-calculation-${data['id']}`).val(calculate);
              $(`#benefit-total-${data['id']}`).val(Math.round(calculate*quantity));
              $(`#benefit-quantity-${data['id']}`).val(quantity);
            }
          }
        } else if (data['description'] === 'Vale Refeição (escala 5x2)') {
          if (workdata_selected.length > 0) {
            let calculate = 0,
              salary = 0,
              workingdays = 0,
              quantity = 0;

            workdata_selected.map(data => {
              if (data['scale'] === '5x2') {
                salary += data['salary'];
                workingdays += data['dayswork'];
                quantity++;
              }
            })

            if (salary > 0) {
              calculate = Math.round(Number((data['value']*workingdays).toFixed(2)));

              $(`#benefit-value-calculation-${data['id']}`).val(calculate);
              $(`#benefit-total-${data['id']}`).val(Math.round(calculate*quantity));
              $(`#benefit-quantity-${data['id']}`).val(quantity);
            }
          }
        } else if (data['description'] === 'Vale Refeição (escala 4x2)') {
          if (workdata_selected.length > 0) {
            let calculate = 0,
              salary = 0,
              workingdays = 0,
              quantity = 0;

            workdata_selected.map(data => {
              if (data['scale'] === '4x2') {
                salary += data['salary'];
                workingdays += data['dayswork'];
                quantity++;
              }
            })

            if (salary > 0) {
              calculate = Math.round(Number((data['value']*workingdays).toFixed(2)));

              $(`#benefit-value-calculation-${data['id']}`).val(calculate);
              $(`#benefit-total-${data['id']}`).val(Math.round(calculate*quantity));
              $(`#benefit-quantity-${data['id']}`).val(quantity);
            }
          }
        }

        $(`#benefit-value-${data['id']}, \
          #benefit-value-calculation-${data['id']},
          #benefit-total-${data['id']}
        `).priceFormat({
          prefix: 'R$ ',
          centsSeparator: ',',
          thousandsSeparator: '.'
        })
      })

      // - Total Benefícios e Outros
      let total = 0;
      benefits_selected.map(__data__ => {
        total += Number($(`#benefit-total-${__data__['id']}`).unmask())
      })

      let interval = setTimeout(function() {
        let _uniforms_checked = {};

        workdata_selected.forEach(work => {
          if (!_uniforms_checked[work['id']]) {
              _uniforms_checked[work['id']] = true;
              total += Number($(`#workdata-uniforms-monthlycost-${work['id']}`).unmask());
            }
        })

        $('#benefits-others-total').val(`${total}`).priceFormat({
          prefix: 'R$ ',
          centsSeparator: ',',
          thousandsSeparator: '.'
        })

        clearTimeout(interval);
      }, 1000)
    }

    function add_equipment_push(id, customID) {
      let data;

      if (id === undefined) {
        data = equipments.filter(data => data['id'] === $('#select-add-equipment').val());
      } else {
        data = equipments.filter(data => data['id'] === id);
      }

      $('#select-add-equipment').val('null');
      document.getElementById('nav-investment-equipment-tab').click();
      setTimeout(function() {
        $('#select-add-equipment').trigger('change');
        if (id === undefined) {
          document.getElementById(`collapse-equipment-${data['id']}`).click();
          setTimeout(function() { $('html, body').animate({scrollTop: $(document).height()}, '100'); }, 500);
        }
      }, 500);

      if (data.length > 0) {
        data = Object.assign({}, data[0]);

        let viewId = String(data['id']);

        if (id != undefined) {
          data['id'] = `${customID}`;

          $(`#li-equipment-${data['id']}`).fadeIn("fast");
        } else {
          data['id'] = `${data['id']}-${generateRandomComplementID()}`;
        }

        let first = Boolean(equipments_selected.filter(__data__ => __data__['id'] === data['id']).length <= 0),
          selectedlength = equipments_selected.filter(__data__ => __data__['id'] === data['id']).length + 1;
        data['id'] = `${data['id']}`;
        equipments_selected.push(data);

        if (first) {
          $('#ul-investment-equipment').append(`\
            <button class="btn btn-mave1 mb-3" id="collapse-equipment-${data['id']}" type="button" data-bs-toggle="collapse" data-bs-target="#li-equipment-${data['id']}" aria-expanded="false" aria-controls="li-equipment-${data['id']}"> \
              ${data['description']} \
            </button> \
            <li class="list-group-item collapse border mb-3" id="li-equipment-${data['id']}" style="opacity: 0"> \
              <div class="row border-bottom mt-3"> \
                <div class="col-12 mb-2"> \
                  <h4 class="fw-bold text-center text-muted border-bottom p-2">${data['description']}</h4> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="equipment-id-${data['id']}">ID</label> \
                  <input type="text" class="form-control" id="equipment-id-${data['id']}" value="${viewId}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="equipment-depreciation-${data['id']}">Depreciação</label> \
                  <input type="text" class="form-control" id="equipment-depreciation-${data['id']}" value="${data['depreciation']}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="equipment-segment-${data['id']}">Segmento</label> \
                  <input type="text" class="form-control" id="equipment-segment-${data['id']}" value="${data['segment']}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="equipment-description-${data['id']}">Descrição</label> \
                  <input type="text" class="form-control" id="equipment-description-${data['id']}" value="${data['description']}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="equipment-quantity-${data['id']}">Quantidade</label> \
                  <input type="text" class="form-control" id="equipment-quantity-${data['id']}" value="${data['quantity']}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="equipment-investment-${data['id']}">Investimento</label> \
                  <input type="text" class="form-control" id="equipment-investment-${data['id']}" value="${data['investment']}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="equipment-amortization-${data['id']}">Amortização</label> \
                  <input type="text" class="form-control" id="equipment-amortization-${data['id']}" value="${data['amortization']}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="equipment-investmentTotal-${data['id']}">Investimento Total</label> \
                  <input type="text" class="form-control" id="equipment-investmentTotal-${data['id']}" value="${data['investmentTotal']}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="equipment-description-120-${data['id']}">Taxa Depreciação 1,20%</label> \
                  <input type="text" class="form-control" id="equipment-description-120-${data['id']}" value="0" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="equipment-maintenance-${data['id']}">Taxa Manutenção 3%</label> \
                  <input type="text" class="form-control" id="equipment-maintenance-${data['id']}" value="0" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="equipment-value-${data['id']}">Valor</label> \
                  <input type="text" class="form-control" id="equipment-value-${data['id']}" value="0" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="equipment-total-${data['id']}">R$ Total</label> \
                  <input type="text" class="form-control" id="equipment-total-${data['id']}" value="0" disabled> \
                </div> \
                <div class="col-12 mb-5"> \
                  <label for="equipment-selected-${data['id']}">Qtd. Selecionados</label> \
                  <input type="text" class="form-control" id="equipment-selected-${data['id']}" value="0" disabled> \
                </div> \
              </div> \
              <button type="button" class="btn btn-warning col-12 mt-3" data-bs-dismiss="modal" id="button-equipment-duplicate-${data['id']}">Duplicar</button> \
              <button type="button" class="btn btn-danger col-12 mt-3" data-bs-dismiss="modal" id="button-equipment-remove-${data['id']}">Remover</button> \
            </li> \
          `)

          $(`#button-equipment-duplicate-${data['id']}`).click(function() {
            $(`#button-equipment-duplicate-${data['id']}, #button-equipment-remove-${data['id']}`).attr('disabled', true);

            $(`#li-equipment-${data['id']}`).fadeOut("slow", function () {
              add_equipment_push(viewId, data['id']);
            })
          })

          $(`#button-equipment-remove-${data['id']}`).click(function () {
            $(`#button-equipment-duplicate-${data['id']}, #button-equipment-remove-${data['id']}`).attr('disabled', true);

            $(`#li-equipment-${data['id']}`).fadeOut("slow", function () {
              let total = Number($(`#equipment-total-${data['id']}`).unmask()),
                equipments_total = Number($(`#investment-equipment-total`).unmask());
              equipments_total -= total;

              $(`#investment-equipment-total`).val(equipments_total).priceFormat({
                prefix: 'R$ ',
                centsSeparator: ',',
                thousandsSeparator: '.'
              })

              let i = 0,
                l = equipments_selected.length;

              for(; i < l; i++) {
                if (equipments_selected[i]['id'] === data['id']) {
                  equipments_selected.splice(i, 1);
                  break;
                }
              }

              selectedlength = equipments_selected.filter(__data__ => __data__['id'] === data['id']).length;

              if (selectedlength <= 0) {
                $(`#collapse-equipment-${data['id']}`).remove();
                $(`#li-equipment-${data['id']}`).remove();
              } else {
                $(`#li-equipment-${data['id']}`).fadeIn('fast');
                $(`#button-equipment-duplicate-${data['id']}, #button-equipment-remove-${data['id']}`).attr('disabled', false);
              }

              $(`#equipment-selected-${data['id']}`).val(Number(selectedlength));
            });
          })
        }

        $(`#li-equipment-${data['id']}`).animate({ opacity: 1 }, 1000);
        $(`#button-equipment-duplicate-${data['id']}, #button-equipment-remove-${data['id']}`).attr('disabled', false);

        $(`#equipment-selected-${data['id']}`).val(Number(selectedlength));

        let description120 = Math.round(data['amortization']*1.2/100),
          maintenance = Math.round(data['amortization']*3/100),
          value = Number(data['amortization']+description120+maintenance),
          total = Number(value*data['quantity']);

        equipments_total = Number($(`#investment-equipment-total`).unmask()) * 0.01;
        equipments_total = Number(equipments_total + total * 0.01).toFixed(2);

        $(`#equipment-description-120-${data['id']}`).val(description120);
        $(`#equipment-maintenance-${data['id']}`).val(maintenance);
        $(`#equipment-value-${data['id']}`).val(value);
        $(`#equipment-total-${data['id']}`).val(total);
        $(`#investment-equipment-total`).val(equipments_total);

        $(`#equipment-investment-${data['id']}, \
          #equipment-amortization-${data['id']}, \
          #equipment-investmentTotal-${data['id']}, \
          #equipment-description-120-${data['id']}, \
          #equipment-maintenance-${data['id']}, \
          #equipment-value-${data['id']}, \
          #equipment-total-${data['id']}, \
          #investment-equipment-total \
        `).priceFormat({
          prefix: 'R$ ',
          centsSeparator: ',',
          thousandsSeparator: '.'
        })
      }
    }

    function add_rental_push(id, customID) {
      let data;

      if (id === undefined) {
        data = rents.filter(data => data['id'] === $('#select-add-rental').val());
      } else {
        data = rents.filter(data => data['id'] === id);
      }

      $('#select-add-rental').val('null');
      document.getElementById('nav-investment-rental-equipment-tab').click();
      setTimeout(function() {
        $('#select-add-rental').trigger('change');
        if (id === undefined) {
          document.getElementById(`collapse-rental-${data['id']}`).click();
          setTimeout(function() { $('html, body').animate({scrollTop: $(document).height()}, '100'); }, 500);
        }
      }, 500);

      if (data.length > 0) {
        data = Object.assign({}, data[0]);

        let viewId = String(data['id']);

        if (id != undefined) {
          data['id'] = `${customID}`;

          $(`#li-rental-${data['id']}`).fadeIn("fast");
        } else {
          data['id'] = `${data['id']}-${generateRandomComplementID()}`;
        }

        let first = Boolean(rents_selected.filter(__data__ => __data__['id'] === data['id']).length <= 0),
          selectedlength = rents_selected.filter(__data__ => __data__['id'] === data['id']).length + 1;
        data['id'] = `${data['id']}`;
        rents_selected.push(data);

        if (first) {
          $('#ul-investment-rental-equipment').append(`\
            <button class="btn btn-mave1 mb-3" id="collapse-rental-${data['id']}" type="button" data-bs-toggle="collapse" data-bs-target="#li-rental-${data['id']}" aria-expanded="false" aria-controls="li-rental-${data['id']}"> \
              ${data['description']} \
            </button> \
            <li class="list-group-item collapse border mb-3" id="li-rental-${data['id']}" style="opacity: 0"> \
              <div class="row border-bottom mt-3"> \
                <div class="col-12 mb-2"> \
                  <h4 class="fw-bold text-center text-muted border-bottom p-2">${data['description']}</h4> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="rental-id-${data['id']}">ID</label> \
                  <input type="text" class="form-control" id="rental-id-${data['id']}" value="${viewId}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="rental-description-${data['id']}">Descrição</label> \
                  <input type="text" class="form-control" id="rental-description-${data['id']}" value="${data['description']}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="rental-quantity-${data['id']}">Quantidade</label> \
                  <input type="text" class="form-control" id="rental-quantity-${data['id']}" value="${data['quantity']}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="rental-unitary-${data['id']}">Valor Unitario</label> \
                  <input type="text" class="form-control" id="rental-unitary-${data['id']}" value="${data['unitary']}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="rental-total-${data['id']}">R$ Total</label> \
                  <input type="text" class="form-control" id="rental-total-${data['id']}" value="${data['total']}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="rental-selected-${data['id']}">Qtd. Selecionados</label> \
                  <input type="text" class="form-control" id="rental-selected-${data['id']}" value="0" disabled> \
                </div> \
              </div> \
              <button type="button" class="btn btn-warning col-12 mt-3" data-bs-dismiss="modal" id="button-rental-duplicate-${data['id']}">Duplicar</button> \
              <button type="button" class="btn btn-danger col-12 mt-3" data-bs-dismiss="modal" id="button-rental-remove-${data['id']}">Remover</button> \
            </li> \
          `)

          $(`#button-rental-duplicate-${data['id']}`).click(function() {
            $(`#button-rental-duplicate-${data['id']}, #button-rental-remove-${data['id']}`).attr('disabled', true);

            $(`#li-rental-${data['id']}`).fadeOut("slow", function () {
              add_rental_push(viewId, data['id']);
            })
          })

          $(`#button-rental-remove-${data['id']}`).click(function () {
            $(`#button-rental-duplicate-${data['id']}, #button-rental-remove-${data['id']}`).attr('disabled', true);

            $(`#li-rental-${data['id']}`).fadeOut("slow", function () {
              let total = Number($(`#rental-total-${data['id']}`).unmask()),
                rents_total = Number($(`#investment-rental-equipment-total`).unmask());
              rents_total -= total;

              $(`#investment-rental-equipment-total`).val(rents_total).priceFormat({
                prefix: 'R$ ',
                centsSeparator: ',',
                thousandsSeparator: '.'
              })

              let i = 0,
                l = rents_selected.length;

              for(; i < l; i++) {
                if (rents_selected[i]['id'] === data['id']) {
                  rents_selected.splice(i, 1);
                  break;
                }
              }

              selectedlength = rents_selected.filter(__data__ => __data__['id'] === data['id']).length;

              if (selectedlength <= 0) {
                $(`#collapse-rental-${data['id']}`).remove();
                $(`#li-rental-${data['id']}`).remove();
              } else {
                $(`#li-rental-${data['id']}`).fadeIn('fast');
                $(`#button-rental-duplicate-${data['id']}, #button-rental-remove-${data['id']}`).attr('disabled', false);
              }

              $(`#rental-selected-${data['id']}`).val(Number(selectedlength));
            });
          })
        }

        $(`#li-rental-${data['id']}`).animate({ opacity: 1 }, 1000);
        $(`#button-rental-duplicate-${data['id']}, #button-rental-remove-${data['id']}`).attr('disabled', false);

        $(`#rental-selected-${data['id']}`).val(Number(selectedlength));

        let unitary = Number($(`#rental-unitary-${data['id']}`).unmask()),
          quantity = Number($(`#rental-quantity-${data['id']}`).val().slice(0, 2)),
          total = Math.round(Number(unitary*quantity));

        rents_total = Number($(`#investment-rental-equipment-total`).unmask()) * 0.01;
        rents_total = Number(rents_total + total * 0.01).toFixed(2);

        $(`#equipment-total-${data['id']}`).val(total);
        $(`#investment-rental-equipment-total`).val(rents_total);

        $(`#rental-unitary-${data['id']}, \
          #rental-total-${data['id']}, \
          #investment-rental-equipment-total \
        `).priceFormat({
          prefix: 'R$ ',
          centsSeparator: ',',
          thousandsSeparator: '.'
        })
      }
    }

    function add_fuel_push(id, customID) {
      let data;

      if (id === undefined) {
        data = fuel.filter(data => data['id'] === $('#select-add-fuel').val());
      } else {
        data = fuel.filter(data => data['id'] === id);
      }

      $('#select-add-fuel').val('null');
      document.getElementById('nav-fuel-vehicles-tab').click();
      setTimeout(function() {
        $('#select-add-fuel').trigger('change');
        if (id === undefined) {
          document.getElementById(`collapse-fuel-${data['id']}`).click();
          setTimeout(function() { $('html, body').animate({scrollTop: $(document).height()}, '100'); }, 500);
        }
      }, 500);

      if (data.length > 0) {
        data = Object.assign({}, data[0]);

        let viewId = String(data['id']);

        if (id != undefined) {
          data['id'] = `${customID}`;

          $(`#li-fuel-${data['id']}`).fadeIn("fast");
        } else {
          data['id'] = `${data['id']}-${generateRandomComplementID()}`;
        }

        let first = Boolean(fuel_selected.filter(__data__ => __data__['id'] === data['id']).length <= 0),
          selectedlength = fuel_selected.filter(__data__ => __data__['id'] === data['id']).length + 1;
        data['id'] = `${data['id']}`;
        fuel_selected.push(data);

        if (first) {
          $('#ul-fuel-vehicles').append(`\
            <button class="btn btn-mave1 mb-3" id="collapse-fuel-${data['id']}" type="button" data-bs-toggle="collapse" data-bs-target="#li-fuel-${data['id']}" aria-expanded="false" aria-controls="li-fuel-${data['id']}"> \
              ${data['description']} \
            </button> \
            <li class="list-group-item collapse border mb-3" id="li-fuel-${data['id']}" style="opacity: 0"> \
              <div class="row border-bottom mt-3"> \
                <div class="col-12 mb-2"> \
                  <h4 class="fw-bold text-center text-muted border-bottom p-2">${data['description']}</h4> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="fuel-id-${data['id']}">ID</label> \
                  <input type="text" class="form-control" id="fuel-id-${data['id']}" value="${viewId}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="fuel-description-${data['id']}">Descrição</label> \
                  <input type="text" class="form-control" id="fuel-description-${data['id']}" value="${data['description']}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="fuel-quantity-${data['id']}">Quantidade</label> \
                  <input type="number" class="form-control" id="fuel-quantity-${data['id']}" value="1"> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="fuel-kmhr-${data['id']}">KM/HR</label> \
                  <input type="number" class="form-control" id="fuel-kmhr-${data['id']}" value="1"> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="fuel-tank-${data['id']}">Litros do tanque</label> \
                  <input type="text" class="form-control" id="fuel-tank-${data['id']}" value="${data['tank']}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="fuel-unitary-${data['id']}">Valor Unitario</label> \
                  <input type="text" class="form-control" id="fuel-unitary-${data['id']}" value="${data['unitary']}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="fuel-total-${data['id']}">R$ Total</label> \
                  <input type="text" class="form-control" id="fuel-total-${data['id']}" value="${data['total']}" disabled> \
                </div> \
                <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 mb-5"> \
                  <label for="fuel-total-calculate-${data['id']}">R$ Total (Com KM/HR)</label> \
                  <input type="text" class="form-control" id="fuel-total-calculate-${data['id']}" value="-" disabled> \
                </div> \
                <div class="col-12 mb-5"> \
                  <label for="fuel-selected-${data['id']}">Qtd. Selecionados</label> \
                  <input type="text" class="form-control" id="fuel-selected-${data['id']}" value="0" disabled> \
                </div> \
              </div> \
              <button type="button" class="btn btn-warning col-12 mt-3" data-bs-dismiss="modal" id="button-fuel-duplicate-${data['id']}">Duplicar</button> \
              <button type="button" class="btn btn-danger col-12 mt-3" data-bs-dismiss="modal" id="button-fuel-remove-${data['id']}">Remover</button> \
            </li> \
          `)

          $(`#button-fuel-duplicate-${data['id']}`).click(function() {
            $(`#button-fuel-duplicate-${data['id']}, #button-fuel-remove-${data['id']}`).attr('disabled', true);

            $(`#li-fuel-${data['id']}`).fadeOut("slow", function () {
              add_fuel_push(viewId, data['id']);
            })
          })

          $(`#button-fuel-remove-${data['id']}`).click(function () {
            $(`#button-fuel-duplicate-${data['id']}, #button-fuel-remove-${data['id']}`).attr('disabled', true);

            $(`#li-fuel-${data['id']}`).fadeOut("slow", function () {
              let total = Number($(`#fuel-total-calculate-${data['id']}`).unmask()),
                fuel_total = Number($(`#fuel-vehicles-total`).unmask());
              fuel_total -= total;

              $(`#fuel-vehicles-total`).val(fuel_total).priceFormat({
                prefix: 'R$ ',
                centsSeparator: ',',
                thousandsSeparator: '.'
              })

              let i = 0,
                l = fuel_selected.length;

              for(; i < l; i++) {
                if (fuel_selected[i]['id'] === data['id']) {
                  fuel_selected.splice(i, 1);
                  break;
                }
              }

              selectedlength = fuel_selected.filter(__data__ => __data__['id'] === data['id']).length;

              if (selectedlength <= 0) {
                $(`#collapse-fuel-${data['id']}`).remove();
                $(`#li-fuel-${data['id']}`).remove();
              } else {
                $(`#li-fuel-${data['id']}`).fadeIn('fast');
                $(`#button-fuel-duplicate-${data['id']}, #button-fuel-remove-${data['id']}`).attr('disabled', false);
              }

              $(`#fuel-selected-${data['id']}`).val(Number(selectedlength));
            });
          })
        }

        $(`#li-fuel-${data['id']}`).animate({ opacity: 1 }, 1000);
        $(`#button-fuel-duplicate-${data['id']}, #button-fuel-remove-${data['id']}`).attr('disabled', false);

        $(`#fuel-selected-${data['id']}`).val(Number(selectedlength));

        $(`#fuel-quantity-${data['id']}, #fuel-kmhr-${data['id']}`).change(fuel_calculate.bind(this));

        fuel_calculate();
      }
    }

    function fuel_calculate() {
      fuel_total = 0;

      fuel_selected.map(fuel => {
        let unitary = Number($(`#fuel-total-${fuel['id']}`).unmask()),
          km_hr = Number($(`#fuel-kmhr-${fuel['id']}`).val()),
          quantity = Number($(`#fuel-quantity-${fuel['id']}`).val()),
          total = Math.round(Number(km_hr*unitary*quantity));

        fuel_total = Number(fuel_total + total * 0.01);

        $(`#fuel-total-calculate-${fuel['id']}`).val(total);

        $(`#fuel-unitary-${fuel['id']}, \
          #fuel-total-${fuel['id']}, \
          #fuel-total-calculate-${fuel['id']} \
        `).priceFormat({
          prefix: 'R$ ',
          centsSeparator: ',',
          thousandsSeparator: '.'
        })
      })

      $(`#fuel-vehicles-total`).val(Number(fuel_total).toFixed(2)).priceFormat({
        prefix: 'R$ ',
        centsSeparator: ',',
        thousandsSeparator: '.'
      })
    }

    function calculate_wberf() {
      let workdata = Number($(`#workdata-text-5`).unmask()) * 0.01,
        benefits = Number($(`#benefits-others-total`).unmask()) * 0.01,
        investment_equipment_total = Number($(`#investment-equipment-total`).unmask()) * 0.01,
        investment_rental_total = Number($(`#investment-rental-equipment-total`).unmask()) * 0.01,
        fuel = Number($(`#fuel-vehicles-total`).unmask()) * 0.01;

      $(`#fuel-vehicles-total-all`).val(Number(workdata + benefits + investment_equipment_total + investment_rental_total + fuel).toFixed(2)).priceFormat({
        prefix: 'R$ ',
        centsSeparator: ',',
        thousandsSeparator: '.'
      })
    }

    function calculate_charges() {
      let charges = [
        Number($(`#charges-percentage-1`).unmask()) * 0.01, // Taxa Administrativa (%)
        Number($(`#charges-percentage-2`).unmask()) * 0.01, // Lucro (%)
        Number($(`#fuel-vehicles-total-all`).unmask()) * 0.01, // Total Geral ($)
        Number($(`#charges-aliquots-condition-payment-percentage`).unmask()) * 0.01 // Taxa Condição de Pagamento (%)
      ],
      calculates = [
        Number(charges[0] + charges[1] + charges[3]), // Total de Taxas (%)
        Number(charges[2] * charges[0] / 100), // Taxa Administrativa ($)
        Number(charges[2] * charges[1] / 100), // Lucro ($)
        Number($('#charges-aliquots-condition-payment-value').val() != '-' ? $(`#charges-aliquots-condition-payment-value`).unmask() : 0) * 0.01 // Taxa Condição de Pagamento ($)
      ];

      // Total de Taxas (%)
      $(`#charges-aliquots-total-1`).val(Number(calculates[0]).toFixed(2)).priceFormat({
        prefix: '',
        suffix: '%',
        allowNegative: false
      })

      // Total de Taxas ($)
      $(`#charges-aliquots-total-2`).val(Number(calculates[1] + calculates[2] + calculates[3]).toFixed(2)).priceFormat({
        prefix: 'R$ ',
        centsSeparator: ',',
        thousandsSeparator: '.'
      })

      // Total após Taxas ($)
      $(`#charges-aliquots-total-3`).val(Number(($(`#fuel-vehicles-total-all`).unmask() * 0.01) + ($('#charges-aliquots-total-2').unmask() * 0.01) / 100).toFixed(2)).priceFormat({
        prefix: 'R$ ',
        centsSeparator: ',',
        thousandsSeparator: '.'
      })

      let aliquot_total = [0, 0];
      // ISS (%)
      if ($('#charges-aliquots-iss-selected').val() === 'Habilitado') {
        $(`#charges-aliquots-iss-value`).val(Number(($(`#charges-aliquots-iss-percentage`).unmask() * 0.01) * ($('#charges-aliquots-total-3').unmask() * 0.01) / 100).toFixed(2)).priceFormat({
          prefix: 'R$ ',
          centsSeparator: ',',
          thousandsSeparator: '.'
        })

        aliquot_total[0] += $(`#charges-aliquots-iss-percentage`).unmask() * 0.01;
        aliquot_total[1] += $(`#charges-aliquots-iss-value`).unmask() * 0.01;
      } else {
        $(`#charges-aliquots-iss-value`).val('-');
      }

      // PIS (%)
      if ($('#charges-aliquots-pis-selected').val() === 'Habilitado') {
        $(`#charges-aliquots-pis-value`).val(Number(($(`#charges-aliquots-pis-percentage`).unmask() * 0.01) * ($('#charges-aliquots-total-3').unmask() * 0.01) / 100).toFixed(2)).priceFormat({
          prefix: 'R$ ',
          centsSeparator: ',',
          thousandsSeparator: '.'
        })

        aliquot_total[0] += $(`#charges-aliquots-pis-percentage`).unmask() * 0.01;
        aliquot_total[1] += $(`#charges-aliquots-pis-value`).unmask() * 0.01;
      } else {
        $(`#charges-aliquots-pis-value`).val('-');
      }

      // COFINS (%)
      if ($('#charges-aliquots-cofins-selected').val() === 'Habilitado') {
        $(`#charges-aliquots-cofins-value`).val(Number(($(`#charges-aliquots-cofins-percentage`).unmask() * 0.01) * ($('#charges-aliquots-total-3').unmask() * 0.01) / 100).toFixed(2)).priceFormat({
          prefix: 'R$ ',
          centsSeparator: ',',
          thousandsSeparator: '.'
        })

        aliquot_total[0] += $(`#charges-aliquots-cofins-percentage`).unmask() * 0.01;
        aliquot_total[1] += $(`#charges-aliquots-cofins-value`).unmask() * 0.01;
      } else {
        $(`#charges-aliquots-cofins-value`).val('-');
      }

      // IR (%)
      if ($('#charges-aliquots-ir-selected').val() === 'Habilitado') {
        $(`#charges-aliquots-ir-value`).val(Number(($(`#charges-aliquots-ir-percentage`).unmask() * 0.01) * ($('#charges-aliquots-total-3').unmask() * 0.01) / 100).toFixed(2)).priceFormat({
          prefix: 'R$ ',
          centsSeparator: ',',
          thousandsSeparator: '.'
        })

        aliquot_total[0] += $(`#charges-aliquots-ir-percentage`).unmask() * 0.01;
        aliquot_total[1] += $(`#charges-aliquots-ir-value`).unmask() * 0.01;
      } else {
        $(`#charges-aliquots-ir-value`).val('-');
      }

      // CSLL (%)
      if ($('#charges-aliquots-csll-selected').val() === 'Habilitado') {
        $(`#charges-aliquots-csll-value`).val(Number(($(`#charges-aliquots-csll-percentage`).unmask() * 0.01) * ($('#charges-aliquots-total-3').unmask() * 0.01) / 100).toFixed(2)).priceFormat({
          prefix: 'R$ ',
          centsSeparator: ',',
          thousandsSeparator: '.'
        })

        aliquot_total[0] += $(`#charges-aliquots-csll-percentage`).unmask() * 0.01;
        aliquot_total[1] += $(`#charges-aliquots-csll-value`).unmask() * 0.01;
      } else {
        $(`#charges-aliquots-csll-value`).val('-');
      }

      // Total de Aliquotas (%)
      $(`#charges-aliquots-total-4`).val(Number(aliquot_total[0]).toFixed(2)).priceFormat({
        prefix: '',
        suffix: '%',
        allowNegative: false
      })

      // Total de Aliquotas ($)
      $(`#charges-aliquots-total-5`).val(Number(aliquot_total[1]).toFixed(2)).priceFormat({
        prefix: 'R$ ',
        centsSeparator: ',',
        thousandsSeparator: '.'
      })

      // Total Geral
      $(`#charges-aliquots-total-6`).val(Number($(`#charges-aliquots-total-3`).unmask() * 0.01 + $('#charges-aliquots-total-5').unmask() * 0.01).toFixed(2)).priceFormat({
        prefix: 'R$ ',
        centsSeparator: ',',
        thousandsSeparator: '.'
      })

      // Total Geral (Reajuste)
      $(`#charges-aliquots-total-8`).val(Number($('#charges-aliquots-total-6').unmask() * 0.01 + ($(`#charges-aliquots-total-7`).unmask() * 0.01 + ($('#charges-aliquots-total-6').unmask() * 0.01) * 2) / 100).toFixed(2)).priceFormat({
        prefix: 'R$ ',
        centsSeparator: ',',
        thousandsSeparator: '.'
      })

      // Taxa Administrativa
      $(`#charges-value-1`).val(Number(calculates[1]).toFixed(2)).priceFormat({
        prefix: 'R$ ',
        centsSeparator: ',',
        thousandsSeparator: '.'
      })

      // Lucro
      $(`#charges-value-2`).val(Number(calculates[2]).toFixed(2)).priceFormat({
        prefix: 'R$ ',
        centsSeparator: ',',
        thousandsSeparator: '.'
      })

      // Taxa de Condição de Pagamento
      $('#charges-aliquots-condition-payment-selected').change(function() { calc_conditions(); });

      function calc_conditions() {
        switch($('#charges-aliquots-condition-payment-selected').val()) {
          case '30':
            $('#charges-aliquots-condition-payment-percentage').val('0').priceFormat({
              prefix: '',
              suffix: '%',
              allowNegative: false
            })
            $('#charges-aliquots-condition-payment-value').val('-').priceFormat({
              prefix: 'R$ ',
              centsSeparator: ',',
              thousandsSeparator: '.'
            })
            break;
          case '60':
            $('#charges-aliquots-condition-payment-percentage').val('100').priceFormat({
              prefix: '',
              suffix: '%',
              allowNegative: false
            })

            $('#charges-aliquots-condition-payment-value').val(Number(($(`#fuel-vehicles-total-all`).unmask() * 0.01) * ($('#charges-aliquots-condition-payment-percentage').unmask() * 0.01) / 100).toFixed(2)).priceFormat({
              prefix: 'R$ ',
              centsSeparator: ',',
              thousandsSeparator: '.'
            })
            break;
          case '90':
            $('#charges-aliquots-condition-payment-percentage').val('200').priceFormat({
              prefix: '',
              suffix: '%',
              allowNegative: false
            })
            $('#charges-aliquots-condition-payment-value').val(Number(($(`#fuel-vehicles-total-all`).unmask() * 0.01) * ($('#charges-aliquots-condition-payment-percentage').unmask() * 0.01) / 100).toFixed(2)).priceFormat({
              prefix: 'R$ ',
              centsSeparator: ',',
              thousandsSeparator: '.'
            })
            break;
          case '120':
            $('#charges-aliquots-condition-payment-percentage').val('300').priceFormat({
              prefix: '',
              suffix: '%',
              allowNegative: false
            })
            $('#charges-aliquots-condition-payment-value').val(Number(($(`#fuel-vehicles-total-all`).unmask() * 0.01) * ($('#charges-aliquots-condition-payment-percentage').unmask() * 0.01) / 100).toFixed(2)).priceFormat({
              prefix: 'R$ ',
              centsSeparator: ',',
              thousandsSeparator: '.'
            })
            break;
        }
      }

      calc_conditions();
    }

    let send_interval = null,
      send_valid = null,
      send_details = {};

    function send() {
      return console.log('em desenvolvimento!');

      send_valid = true;

      if ($('#equipments-ID').val().length <= 0) {
        $('#equipments-ID').addClass('is-invalid');
        send_valid = false;
      }

      if ($('#equipments-depreciation').val().length <= 0) {
        $('#equipments-depreciation').addClass('is-invalid');
        send_valid = false;
      }

      if ($('#equipments-segment').val().length <= 0) {
        $('#equipments-segment').addClass('is-invalid');
        send_valid = false;
      }

      if ($('#equipments-description').val().length <= 0) {
        $('#equipments-description').addClass('is-invalid');
        send_valid = false;
      }

      if ($('#equipments-quantity').val().length <= 0) {
        $('#equipments-quantity').addClass('is-invalid');
        send_valid = false;
      }

      if ($('#equipments-investment').val().length <= 0) {
        $('#equipments-investment').addClass('is-invalid');
        send_valid = false;
      }

      if ($('#equipments-amortization').val().length <= 0) {
        $('#equipments-amortization').addClass('is-invalid');
        send_valid = false;
      }

      if ($('#equipments-investmentTotal').val().length <= 0) {
        $('#equipments-investmentTotal').addClass('is-invalid');
        send_valid = false;
      }

      if (!send_valid) {
        alerting('Existem campos obrigatórios não preenchidos e/ou invalidos.');

        if (send_interval) {
          clearTimeout(send_interval);
          send_interval = null;
        }

        send_interval = setTimeout(function() {
          $('\
            #equipments-ID, \
            #equipments-depreciation, \
            #equipments-segment, \
            #equipments-description, \
            #equipments-quantity, \
            #equipments-investment, \
            #equipments-amortization, \
            #equipments-investmentTotal \
          '.trim()).removeClass('is-invalid');
        }, 1000)
      }

      if (!send_valid) return;

      loading(true);

      axios.request({
        method: 'POST',
        url: `${baseurl}/system/equipments/register`,
        headers: {
          "Content-Type": "application/json",
          "usr_token": localStorage.getItem('usr-token'),
          "usr_internetadress": localStorage.getItem('usr-internetadress')
        },
        data: {
          'id': String($("#equipments-ID").val()),
          'depreciation': Number($("#equipments-depreciation").val()),
          'segment': String($("#equipments-segment").val()),
          'description': String($("#equipments-description").val()),
          'quantity': Number($("#equipments-quantity").val()),
          'investment': Number($("#equipments-investment").unmask()),
          'amortization': Number($("#equipments-amortization").unmask()),
          'investmentTotal': Number($("#equipments-investmentTotal").unmask())
        }
      })
      .then(() => {
        alerting(`Equipamento registrado com sucesso!`);

        equipments.push({});
        $("#equipments-ID").val(StringPadZero(equipments.length + 1, 6));
        $("#equipments-depreciation").val(1);
        $("#equipments-segment").val('');
        $("#equipments-description").val('');
        $("#equipments-quantity").val(1);
        $("#equipments-investment, #equipments-amortization, #equipments-investmentTotal").val(0).priceFormat({
          prefix: 'R$ ',
          centsSeparator: ',',
          thousandsSeparator: '.'
        });

        loading(false);
      })
      .catch(error => {
        alerting(`Ocorreu um erro inesperado, fale com o administrador do sistema.`);
        console.log(error);
        loading(false);
      })
    }

    function closed() {
      return console.log('em desenvolvimento!');
    }

    function print() {
      let docName = `Orçamento_TESTE`,
        layerAppend = [],
        totals = {
          'workdata': {},
          'benefits': {},
          'uniforms': {},
          'equipments': {}
        },
        data = LZString.compressToEncodedURIComponent(JSON.stringify({
          'budgetDesc': $('#budgets-description').val(),
          'budgetID': $('#budgets-ID').val(),
          'clientname': (() => { 
            let client = clients.filter(e => e['id'] === $('#budgets-client-selected').val());

            return `${client['name']}(${client['cpfcnpj']})`;
          })(),
          'chargetotal': {
            'percentage': $('#workdata-text-3').val(),
            'value': $(`#workdata-text-4`).val()
          },
          'technicalreserve': $('#workdata-technicalreserve-1').val(),
          'indirect': $('#charges-percentage-1').val(),
          'lair': $('#charges-percentage-2').val(),
          'iss': {
            'percentage': $('#charges-aliquots-iss-percentage').val(),
            'value': $('#charges-aliquots-iss-value').val()
          },
          'piscofins': {
            'percentage': (() => {
              let n = Number(Number($('#charges-aliquots-pis-percentage').unmask() * 0.01) + Number($('#charges-aliquots-cofins-percentage').unmask() * 0.01)).toFixed(2) * 0.01;
              return Number(n).toLocaleString("pt-BR", { style: 'percent', minimumFractionDigits: 2, maximumFractionDigits: 2 });
            })(),
            'value': (() => {
              let n = Number(Number($('#charges-aliquots-pis-value').unmask()) + Number($('#charges-aliquots-cofins-value').unmask())).toFixed(2) * 0.01;
              return Number(n).toLocaleString("pt-BR", { style: 'currency', currency: 'BRL' });
            })()
          },
          'ir': {
            'percentage': $('#charges-aliquots-ir-percentage').val(),
            'value': $('#charges-aliquots-ir-value').val()
          },
          'csll': {
            'percentage': $('#charges-aliquots-csll-percentage').val(),
            'value': $('#charges-aliquots-csll-value').val()
          },
          'totalcost': $('#fuel-vehicles-total-all').val(),
          'taxes': (() => {
            let n = Number(
              Number($('#charges-aliquots-iss-value').unmask()) + 
              Number($('#charges-aliquots-pis-value').unmask()) +
              Number($('#charges-aliquots-cofins-value').unmask()) +
              Number($('#charges-aliquots-ir-value').unmask()) +
              Number($('#charges-aliquots-csll-value').unmask())
            ).toFixed(2) * 0.01;
            return Number(n).toLocaleString("pt-BR", { style: 'currency', currency: 'BRL' });
          })(),
          'indirectcost': $('#charges-value-1').val(),
          'profit': $('#charges-value-2').val(),
          'salevalue': $('#charges-aliquots-total-8').val(),
          'workdata': (() => {
            let __data = [];

            workdata_selected.map(work => {
              let visibility = true;

              if (layerAppend.indexOf(work['id']) != -1)
                visibility = false;
              else 
                layerAppend.push(work['id']);

                __data.push({
                  visibility,
                  'description': $(`#workdata-jobtitle-${work['id']}`).val(),
                  'scale': `${$(`#workdata-scale-${work['id']}`).val()}(${$(`#workdata-time-start-${work['id']}`).val()} - ${$(`#workdata-time-end-${work['id']}`).val()})`,
                  'quantity': Number($(`#workdata-quantity-${work['id']}`).val()),
                  'salary': Number($(`#workdata-salary-${work['id']}`).unmask()),
                  'dayswork': Number($(`#workdata-dayswork-${work['id']}`).val()),
                  'dsr': Number($(`#workdata-dsr-${work['id']}`).unmask()),
                  'additionalnight': {
                    'enabled': $(`#workdata-additionalnight-status-${work['id']}`).val().toLowerCase() === 'true' ? true : false,
                    'value': Number($(`#workdata-additionalnight-value-${work['id']}`).unmask())
                  },
                  'gratification': {
                    'enabled': $(`#workdata-gratification-status-${work['id']}`).val().toLowerCase() === 'true' ? true : false,
                    'value': Number($(`#workdata-gratification-value-${work['id']}`).unmask())
                  },
                  'accumulation': {
                    'enabled': $(`#workdata-accumulation-status-${work['id']}`).val().toLowerCase() === 'true' ? true : false,
                    'value': Number($(`#workdata-accumulation-value-${work['id']}`).unmask())
                  },
                  'dangerousness': {
                    'enabled': $(`#workdata-dangerousness-status-${work['id']}`).val().toLowerCase() === 'true' ? true : false,
                    'value': Number($(`#workdata-dangerousness-value-${work['id']}`).unmask())
                  },
                  'insalubrity': {
                    'enabled': $(`#workdata-insalubrity-status-${work['id']}`).val().toLowerCase() === 'true' ? true : false,
                    'value': Number($(`#workdata-insalubrity-value-${work['id']}`).unmask())
                  },
                  'overtimefifty': {
                    'enabled': $(`#workdata-overtime-fifty-status-${work['id']}`).val().toLowerCase() === 'true' ? true : false,
                    'value': Number($(`#workdata-overtime-fifty-value-${work['id']}`).unmask())
                  },
                  'overtimehundred': {
                    'enabled': $(`#workdata-overtime-hundred-status-${work['id']}`).val().toLowerCase() === 'true' ? true : false,
                    'value': Number($(`#workdata-overtime-hundred-value-${work['id']}`).unmask())
                  },
                  'totalunity': {
                    'items': true,
                    'value': Number($(`#workdata-total-${work['id']}`).unmask())
                  }
                })
            })
            return __data;
          })(),
          'benefits': (() => {
            let __data = [];

            benefits_selected.map(benefit => {
              let visibility = true;

              if (layerAppend.indexOf(benefit['id']) != -1)
                visibility = false;
              else 
                layerAppend.push(benefit['id']);

                __data.push({
                  visibility,
                  'description': String(benefit['description']),
                  'quantity': Number($(`#benefit-quantity-${benefit['id']}`).val()),
                  'value': Number($(`#benefit-value-${benefit['id']}`).unmask()),
                  'calculation': Number($(`#benefit-value-calculation-${benefit['id']}`).unmask()),
                  'total': Number($(`#benefit-total-${benefit['id']}`).unmask())
                })
            })
            return __data;
          })(),
          'uniforms': (() => {
            let __data = [],
              __quantity = {};

            workdata_selected.forEach(work => {
              let __uniforms = uniforms[$(`#workdata-ID-${work['id']}`).val()];

              if (__uniforms instanceof Array)
                __uniforms.map(uniform => {
                  let visibility = true;

                  if (__quantity[`uniform-${uniform['id']}-${work['scale']}`] === undefined)
                    __quantity[`uniform-${uniform['id']}-${work['scale']}`] = Number($(`#workdata-${work['id']}-uniform-quantity-${uniform['id']}`).val());
                  else if ($(`#workdata-quantity-${work['id']}`).val() <= 1)
                    __quantity[`uniform-${uniform['id']}-${work['scale']}`] += Number($(`#workdata-${work['id']}-uniform-quantity-${uniform['id']}`).val());

                  if (layerAppend.indexOf(`uniform-${uniform['id']}-${work['scale']}`) != -1)
                    visibility = false;
                  else
                    layerAppend.push(`uniform-${uniform['id']}-${work['scale']}`);

                  __data.push({
                    visibility,
                    'description': String(`${$(`#workdata-${work['id']}-uniform-description-${uniform['id']}`).val()}(escala ${work['scale']})`),
                    'quantity': __quantity[`uniform-${uniform['id']}-${work['scale']}`],
                    'unitary': {
                      'items': true,
                      'value': Number($(`#workdata-${work['id']}-uniform-unitary-${uniform['id']}`).unmask())
                    },
                    'total': {
                      'sumitems': true,
                      'value': Number($(`#workdata-${work['id']}-uniform-total-${uniform['id']}`).unmask())
                    }
                  })
                })
            })

            let search = {
              'value': '',
              'indexOf': 0,
              'lastIndexOf': 0,
              'rate': 0,
              'limit': __data.length - 1
            }

            while(search['rate'] < search['limit']) {
              if (
                __data[search['indexOf']] != null &&
                search['value'] === ''
              ) {
                search['value'] = __data[search['indexOf']]['description'];
              }
              else if (
                __data[search['lastIndexOf']] != null &&
                __data[search['lastIndexOf']]['description'] === search['value']
              ) {
                __data[search['indexOf']] = Object.assign(__data[search['lastIndexOf']], { 'visibility': true });
                __data[search['lastIndexOf']] = null;
              }

              if(search['lastIndexOf'] < search['limit'])
                search['lastIndexOf']++;
              else {
                search['value'] = '';
                search['rate']++;
                search['indexOf']++;
                search['lastIndexOf'] = 0;
              }
            }

            return __data.filter(e => e != null);
          })(),
          'equipments': (() => {
            let __data = [];

            equipments_selected.map(equipment => {
              let visibility = true;

              if (layerAppend.indexOf(`equipment-${equipment['id']}`) != -1)
                visibility = false;
              else
                layerAppend.push(`equipment-${equipment['id']}`);

                __data.push({
                  visibility,
                  'description': String($(`#equipment-description-${equipment['id']}`).val()),
                  'quantity': Number($(`#equipment-selected-${equipment['id']}`).val()),
                  'depreciation': Number($(`#equipment-depreciation-${equipment['id']}`).val()),
                  'investment': Number($(`#equipment-investment-${equipment['id']}`).unmask()),
                  'unitary': {
                    'items': true,
                    'value': Number($(`#equipment-value-${equipment['id']}`).unmask())
                  },
                  'total': {
                    'sumitems': true,
                    'value': Number($(`#equipment-total-${equipment['id']}`).unmask())
                  }
                })
            })
            return __data;
          })(),
          totals
        }));

      alerting('O download iniciara em breve...');
      window.open(
        `${baseurl}/system/budgets/print?docname=${String(LZString.compressToEncodedURIComponent(docName))}&data=${data}&usr_token=${localStorage.getItem('usr-token')}&usr_internetadress=${localStorage.getItem('usr-internetadress')}`,
        "_blank"
      );
    }